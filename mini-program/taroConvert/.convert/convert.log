INFO [taroize] parse - 入参 
option: {"json":"{\"pages\":[\"pages/index/index\",\"pages/project/project\",\"pages/info/info\",\"pages/room_distribution/room_distribution\",\"pages/room_video/room_video\",\"pages/room_position/room_position\",\"pages/room_type/room_type\",\"pages/room_flow/room_flow\",\"pages/room_handbook/room_handbook\",\"pages/unit_list/unit_list\"],\"window\":{\"backgroundTextStyle\":\"light\",\"navigationBarBackgroundColor\":\"#fff\",\"navigationBarTitleText\":\"昌平区“北四村”棚改项目安置房\",\"navigationBarTextStyle\":\"black\"},\"tabBar\":{\"color\":\"#7f8389\",\"selectedColor\":\"#00a8f3\",\"borderStyle\":\"black\",\"backgroundColor\":\"#fff\",\"list\":[{\"pagePath\":\"pages/project/project\",\"text\":\"项目概况\",\"iconPath\":\"img/tabbar/t-1.png\",\"selectedIconPath\":\"img/tabbar/t-1s.png\"},{\"pagePath\":\"pages/index/index\",\"text\":\"主页\",\"iconPath\":\"img/tabbar/t-2.png\",\"selectedIconPath\":\"img/tabbar/t-2s.png\"},{\"pagePath\":\"pages/info/info\",\"text\":\"信息公示\",\"iconPath\":\"img/tabbar/t-3.png\",\"selectedIconPath\":\"img/tabbar/t-3s.png\"}]},\"lazyCodeLoading\":\"requiredComponents\",\"style\":\"v2\",\"sitemapLocation\":\"sitemap.json\"}","script":"// app.ts\r\nApp({\r\n  globalData: {\r\n    host: \"https://www.klmxf.com\",\r\n  },\r\n  onLaunch() {\r\n    // 展示本地存储能力\r\n    const logs = wx.getStorageSync(\"logs\") || [];\r\n    logs.unshift(Date.now());\r\n    wx.setStorageSync(\"logs\", logs);\r\n\r\n    // 登录\r\n    wx.login({\r\n      success: (res) => {\r\n        console.log(res.code);\r\n        // 发送 res.code 到后台换取 openId, sessionKey, unionId\r\n      },\r\n    });\r\n  },\r\n});\r\n","scriptPath":"D:\\work\\Floor\\mini-program\\miniprogram\\app.js","path":"D:\\work\\Floor\\mini-program\\miniprogram","rootPath":"D:\\work\\Floor\\mini-program\\miniprogram","framework":"React","isApp":true,"logFilePath":"D:\\work\\Floor\\mini-program\\taroConvert\\.convert\\convert.log"} 
INFO [taroize] parseWXML - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram 
parseImport: undefined 
INFO [taroize] parseScript - 入参 
scriptPath: D:\work\Floor\mini-program\miniprogram\app.js 
INFO [taroize] parseCode - 入参
scriptPath: D:\work\Floor\mini-program\miniprogram\app.js 
INFO [taroize] parseScript - 解析CallExpression 
App({
  globalData: {
    host: "https://www.klmxf.com"
  },
  onLaunch() {
    // 展示本地存储能力
    const logs = wx.getStorageSync("logs") || [];
    logs.unshift(Date.now());
    wx.setStorageSync("logs", logs);

    // 登录
    wx.login({
      success: res => {
        console.log(res.code);
        // 发送 res.code 到后台换取 openId, sessionKey, unionId
      }
    });
  }
}) 
INFO [taroize] parsePage - 入参 
pagePath: App({
  globalData: {
    host: "https://www.klmxf.com"
  },
  onLaunch() {
    // 展示本地存储能力
    const logs = wx.getStorageSync("logs") || [];
    logs.unshift(Date.now());
    wx.setStorageSync("logs", logs);

    // 登录
    wx.login({
      success: res => {
        console.log(res.code);
        // 发送 res.code 到后台换取 openId, sessionKey, unionId
      }
    });
  }
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.getStorageSync("logs") 
INFO [taroize] parsePage - 解析CallExpression 
logs.unshift(Date.now()) 
INFO [taroize] parsePage - 解析CallExpression 
Date.now() 
INFO [taroize] parsePage - 解析CallExpression 
wx.setStorageSync("logs", logs) 
INFO [taroize] parsePage - 解析CallExpression 
wx.login({
  success: res => {
    console.log(res.code);
    // 发送 res.code 到后台换取 openId, sessionKey, unionId
  }
}) 
INFO [taroize] parsePage - 解析CallExpression 
console.log(res.code) 
INFO [taroize] parseScript - 解析Identifier 
App 
INFO [taroize] parseScript - 解析Identifier 
globalData 
INFO [taroize] parseScript - 解析Identifier 
host 
INFO [taroize] parseScript - 解析Identifier 
onLaunch 
INFO [taroize] parseScript - 解析BlockStatement 
{
  // 展示本地存储能力
  const logs = Taro.getStorageSync("logs") || [];
  logs.unshift(Date.now());
  Taro.setStorageSync("logs", logs);

  // 登录
  Taro.login({
    success: res => {
      console.log(res.code);
      // 发送 res.code 到后台换取 openId, sessionKey, unionId
    }
  });
} 
INFO [taroize] parseScript - 解析Identifier 
logs 
INFO [taroize] parseScript - 解析CallExpression 
Taro.getStorageSync("logs") 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
getStorageSync 
INFO [taroize] parseScript - 解析CallExpression 
logs.unshift(Date.now()) 
INFO [taroize] parseScript - 解析Identifier 
logs 
INFO [taroize] parseScript - 解析Identifier 
unshift 
INFO [taroize] parseScript - 解析CallExpression 
Date.now() 
INFO [taroize] parseScript - 解析Identifier 
Date 
INFO [taroize] parseScript - 解析Identifier 
now 
INFO [taroize] parseScript - 解析CallExpression 
Taro.setStorageSync("logs", logs) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
setStorageSync 
INFO [taroize] parseScript - 解析Identifier 
logs 
INFO [taroize] parseScript - 解析CallExpression 
Taro.login({
  success: res => {
    console.log(res.code);
    // 发送 res.code 到后台换取 openId, sessionKey, unionId
  }
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
login 
INFO [taroize] parseScript - 解析Identifier 
success 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析BlockStatement 
{
  console.log(res.code);
  // 发送 res.code 到后台换取 openId, sessionKey, unionId
} 
INFO [taroize] parseScript - 解析CallExpression 
console.log(res.code) 
INFO [taroize] parseScript - 解析Identifier 
console 
INFO [taroize] parseScript - 解析Identifier 
log 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
code 
INFO [taroize] parse - 入参 
option: {"json":"{\"navigationBarTitleText\":\"北四村棚改项目\"}","script":"// index.ts\r\n// 获取应用实例\r\nconst app = getApp();\r\n\r\nPage({\r\n  data: {\r\n    indicatorDots: true,\r\n    vertical: false,\r\n    autoplay: true,\r\n    interval: 2000,\r\n    duration: 500,\r\n    circular: true,\r\n    height: \"\",\r\n    data: [],\r\n  },\r\n  goheight(e) {\r\n    var width = wx.getSystemInfoSync().windowWidth;\r\n    //获取可使用窗口宽度\r\n    var imgheight = e.detail.height;\r\n    //获取图片实际高度\r\n    var imgwidth = e.detail.width;\r\n    //获取图片实际宽度\r\n    var height = (width * imgheight) / imgwidth + \"px\";\r\n    //计算等比swiper高度\r\n    this.setData({\r\n      height: height,\r\n    });\r\n  },\r\n  changeIndicatorDots() {\r\n    this.setData({\r\n      indicatorDots: !this.data.indicatorDots,\r\n    });\r\n  },\r\n\r\n  changeAutoplay() {\r\n    this.setData({\r\n      autoplay: !this.data.autoplay,\r\n    });\r\n  },\r\n\r\n  intervalChange(e) {\r\n    this.setData({\r\n      interval: e.detail.value,\r\n    });\r\n  },\r\n\r\n  durationChange(e) {\r\n    this.setData({\r\n      duration: e.detail.value,\r\n    });\r\n  },\r\n  toUnitList(e) {\r\n    const { place, building } = e.currentTarget.dataset;\r\n    wx.setStorage({ data: { place, building }, key: \"queryDy\" });\r\n    wx.navigateTo({\r\n      url: `../unit_list/unit_list`,\r\n    });\r\n  },\r\n  onLoad() {\r\n    this.getList();\r\n  },\r\n  getList() {\r\n    wx.request({\r\n      url: app.globalData.host + \"/api/wechat/placeFloor\",\r\n      method: \"GET\",\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: {\r\n        assign_batch_no: 1,\r\n      },\r\n      success: (res) => {\r\n        const { data, status } = res.data;\r\n        if (status === \"success\") {\r\n          this.setData({ data: data });\r\n        }\r\n      },\r\n      fail: function (error) {\r\n        console.error(\"请求出错:\", error);\r\n      },\r\n    });\r\n  },\r\n});\r\n","scriptPath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\index\\index.js","wxml":"<!-- index.wxml -->\r\n<view class=\"container\">\r\n  <swiper indicator-dots=\"{{indicatorDots}}\" autoplay=\"{{autoplay}}\" circular=\"{{circular}}\" interval=\"{{interval}}\" duration=\"{{duration}}\" style=\"height:{{height}}\">\r\n    <block>\r\n      <swiper-item>\r\n        <image src=\"https://www.klmxf.com/m/wechat/banner/banner1.jpg\" class=\"swiper-item\" mode=\"widthFix\" bindload='goheight'></image>\r\n      </swiper-item>\r\n      <swiper-item>\r\n        <image src=\"https://www.klmxf.com/m/wechat/banner/banner2.jpg\" class=\"swiper-item\" mode=\"widthFix\" bindload='goheight'></image>\r\n      </swiper-item>\r\n    </block>\r\n  </swiper>\r\n  <view class=\"item\" wx:for=\"{{data}}\" wx:for-item=\"item\">\r\n    <view class=\"title\">{{item.place}}地块</view>\r\n    <view class=\"block\">\r\n      <view class=\"text\" wx:for=\"{{item.building}}\" wx:for-item=\"building\" bindtap=\"toUnitList\" data-place=\"{{item.place}}\" data-building=\"{{building}}\">\r\n        <text>{{building}}</text>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</view>","path":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\index","rootPath":"D:\\work\\Floor\\mini-program\\miniprogram","pluginInfo":{"pluginRoot":"","pluginName":"","pages":{},"pagesMap":{},"publicComponents":{},"entryFilePath":""},"logFilePath":"D:\\work\\Floor\\mini-program\\taroConvert\\.convert\\convert.log","templatePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\index\\index.wxml","framework":"React"} 
INFO [taroize] parseWXML - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\index 
parseImport: undefined 
INFO [taroize] parseNode - 入参 
tagName: undefined 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"container"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"indicator-dots","value":"{{indicatorDots}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"autoplay","value":"{{autoplay}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"circular","value":"{{circular}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"interval","value":"{{interval}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"duration","value":"{{duration}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"style","value":"height:{{height}}"} 
INFO [taroize] parseStyle - 入参 
key: style 
value: height:{{height}} 
INFO [taroize] parseStyleAttrs - 进入函数 
INFO [taroize] convertStyleAttrs - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: swiper 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: swiper-item 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"https://www.klmxf.com/m/wechat/banner/banner1.jpg"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"swiper-item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindload","value":"goheight"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: swiper-item 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"https://www.klmxf.com/m/wechat/banner/banner2.jpg"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"swiper-item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindload","value":"goheight"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"wx:for","value":"{{data}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"wx:for-item","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"block"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"text"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"wx:for","value":"{{item.building}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"wx:for-item","value":"building"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindtap","value":"toUnitList"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"data-place","value":"{{item.place}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"data-building","value":"{{building}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: text 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] createPreWxmlVistor - 入参 
templates: [object Map] 
INFO [taroize] templateBfs - 进入函数 
INFO [taroize] createWxmlVistor - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block><View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
      height: `${height}`
    }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper><View className="item" wx:for={data} wx:for-item="item"><View className="title">{item.place + "地块"}</View><View className="block"><View className="text" wx:for={item.building} wx:for-item="building" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View></View></View></View></Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Swiper 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
indicatorDots={indicatorDots} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
indicatorDots 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
autoplay={autoplay} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
autoplay 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
circular={circular} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
circular 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
interval={interval} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
interval 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
duration={duration} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
duration 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  height: `${height}`
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Swiper 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:for={data} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:for={item.building} 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
    height: `${height}`
  }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper><Block>{data.map((item, index) => {
      return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block"><Block>{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</Block></View></View>;
    })}</Block></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Swiper 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
indicatorDots={indicatorDots} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
indicatorDots 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
autoplay={autoplay} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
autoplay 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
circular={circular} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
circular 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
interval={interval} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
interval 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
duration={duration} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
duration 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  height: `${height}`
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Swiper 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
  height: `${height}`
}}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Swiper 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
indicatorDots={indicatorDots} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
indicatorDots 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
autoplay={autoplay} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
autoplay 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
circular={circular} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
circular 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
interval={interval} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
interval 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
duration={duration} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
duration 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  height: `${height}`
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Swiper 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Swiper 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
indicatorDots={indicatorDots} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
indicatorDots 
INFO [taroize] createWxmlVistor - 解析Identifier 
indicatorDots 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
autoplay={autoplay} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
autoplay 
INFO [taroize] createWxmlVistor - 解析Identifier 
autoplay 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
circular={circular} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
circular 
INFO [taroize] createWxmlVistor - 解析Identifier 
circular 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
interval={interval} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
interval 
INFO [taroize] createWxmlVistor - 解析Identifier 
interval 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
duration={duration} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
duration 
INFO [taroize] createWxmlVistor - 解析Identifier 
duration 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  height: `${height}`
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析Identifier 
height 
INFO [taroize] createWxmlVistor - 解析Identifier 
height 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析Identifier 
goheight 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="swiper-item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onLoad={this.goheight} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onLoad 
INFO [taroize] createWxmlVistor - 解析Identifier 
goheight 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
SwiperItem 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Swiper 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block>{data.map((item, index) => {
    return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block"><Block>{item.building.map((building, index) => {
            return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
          })}</Block></View></View>;
  })}</Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
data 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="title">{item.place + "地块"}</View><View className="block"><Block>{item.building.map((building, index) => {
        return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
      })}</Block></View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">{item.place + "地块"}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
place 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="block"><Block>{item.building.map((building, index) => {
      return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
    })}</Block></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block>{item.building.map((building, index) => {
    return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
  })}</Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
toUnitList 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Text>{building}</Text> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
toUnitList 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Text>{building}</Text> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
data 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
      return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
    })}</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">{item.place + "地块"}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
place 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="block">{item.building.map((building, index) => {
    return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
  })}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toUnitList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
toUnitList 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-place={item.place} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-place 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
place 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-building={building} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-building 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Text>{building}</Text> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] parseScript - 入参 
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\index\index.js 
INFO [taroize] parseCode - 入参
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\index\index.js 
INFO [taroize] parseScript - 解析Identifier 
app 
INFO [taroize] parseScript - 解析CallExpression 
getApp() 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
getApp 
INFO [taroize] parseScript - 解析CallExpression 
Page({
  data: {
    indicatorDots: true,
    vertical: false,
    autoplay: true,
    interval: 2000,
    duration: 500,
    circular: true,
    height: "",
    data: []
  },
  goheight(e) {
    var width = wx.getSystemInfoSync().windowWidth;
    //获取可使用窗口宽度
    var imgheight = e.detail.height;
    //获取图片实际高度
    var imgwidth = e.detail.width;
    //获取图片实际宽度
    var height = width * imgheight / imgwidth + "px";
    //计算等比swiper高度
    this.setData({
      height: height
    });
  },
  changeIndicatorDots() {
    this.setData({
      indicatorDots: !this.data.indicatorDots
    });
  },
  changeAutoplay() {
    this.setData({
      autoplay: !this.data.autoplay
    });
  },
  intervalChange(e) {
    this.setData({
      interval: e.detail.value
    });
  },
  durationChange(e) {
    this.setData({
      duration: e.detail.value
    });
  },
  toUnitList(e) {
    const {
      place,
      building
    } = e.currentTarget.dataset;
    wx.setStorage({
      data: {
        place,
        building
      },
      key: "queryDy"
    });
    wx.navigateTo({
      url: `../unit_list/unit_list`
    });
  },
  onLoad() {
    this.getList();
  },
  getList() {
    wx.request({
      url: app.globalData.host + "/api/wechat/placeFloor",
      method: "GET",
      header: {
        "Content-Type": "application/json"
      },
      data: {
        assign_batch_no: 1
      },
      success: res => {
        const {
          data,
          status
        } = res.data;
        if (status === "success") {
          this.setData({
            data: data
          });
        }
      },
      fail: function (error) {
        console.error("请求出错:", error);
      }
    });
  }
}) 
INFO [taroize] parsePage - 入参 
pagePath: Page({
  data: {
    indicatorDots: true,
    vertical: false,
    autoplay: true,
    interval: 2000,
    duration: 500,
    circular: true,
    height: "",
    data: []
  },
  goheight(e) {
    var width = wx.getSystemInfoSync().windowWidth;
    //获取可使用窗口宽度
    var imgheight = e.detail.height;
    //获取图片实际高度
    var imgwidth = e.detail.width;
    //获取图片实际宽度
    var height = width * imgheight / imgwidth + "px";
    //计算等比swiper高度
    this.setData({
      height: height
    });
  },
  changeIndicatorDots() {
    this.setData({
      indicatorDots: !this.data.indicatorDots
    });
  },
  changeAutoplay() {
    this.setData({
      autoplay: !this.data.autoplay
    });
  },
  intervalChange(e) {
    this.setData({
      interval: e.detail.value
    });
  },
  durationChange(e) {
    this.setData({
      duration: e.detail.value
    });
  },
  toUnitList(e) {
    const {
      place,
      building
    } = e.currentTarget.dataset;
    wx.setStorage({
      data: {
        place,
        building
      },
      key: "queryDy"
    });
    wx.navigateTo({
      url: `../unit_list/unit_list`
    });
  },
  onLoad() {
    this.getList();
  },
  getList() {
    wx.request({
      url: app.globalData.host + "/api/wechat/placeFloor",
      method: "GET",
      header: {
        "Content-Type": "application/json"
      },
      data: {
        assign_batch_no: 1
      },
      success: res => {
        const {
          data,
          status
        } = res.data;
        if (status === "success") {
          this.setData({
            data: data
          });
        }
      },
      fail: function (error) {
        console.error("请求出错:", error);
      }
    });
  }
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.getSystemInfoSync() 
INFO [taroize] parsePage - 解析CallExpression 
this.setData({
  height: height
}) 
INFO [taroize] parsePage - 解析CallExpression 
this.setData({
  indicatorDots: !this.data.indicatorDots
}) 
INFO [taroize] parsePage - 解析CallExpression 
this.setData({
  autoplay: !this.data.autoplay
}) 
INFO [taroize] parsePage - 解析CallExpression 
this.setData({
  interval: e.detail.value
}) 
INFO [taroize] parsePage - 解析CallExpression 
this.setData({
  duration: e.detail.value
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.setStorage({
  data: {
    place,
    building
  },
  key: "queryDy"
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.navigateTo({
  url: `../unit_list/unit_list`
}) 
WARN [taroize] replacePluginUrl - navigateFunc 的 url 是动态的 
INFO [taroize] parsePage - 解析CallExpression 
this.getList() 
INFO [taroize] parsePage - 解析CallExpression 
wx.request({
  url: app.globalData.host + "/api/wechat/placeFloor",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1
  },
  success: res => {
    const {
      data,
      status
    } = res.data;
    if (status === "success") {
      this.setData({
        data: data
      });
    }
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taroize] parsePage - 解析CallExpression 
this.setData({
  data: data
}) 
INFO [taroize] parsePage - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taroize] parseScript - 解析Identifier 
Page 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
indicatorDots 
INFO [taroize] parseScript - 解析Identifier 
vertical 
INFO [taroize] parseScript - 解析Identifier 
autoplay 
INFO [taroize] parseScript - 解析Identifier 
interval 
INFO [taroize] parseScript - 解析Identifier 
duration 
INFO [taroize] parseScript - 解析Identifier 
circular 
INFO [taroize] parseScript - 解析Identifier 
height 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
goheight 
INFO [taroize] parseScript - 解析Identifier 
e 
INFO [taroize] parseScript - 解析BlockStatement 
{
  var width = Taro.getSystemInfoSync().windowWidth;
  //获取可使用窗口宽度
  var imgheight = e.detail.height;
  //获取图片实际高度
  var imgwidth = e.detail.width;
  //获取图片实际宽度
  var height = width * imgheight / imgwidth + "px";
  //计算等比swiper高度
  this.setData({
    height: height
  });
} 
INFO [taroize] parseScript - 解析Identifier 
width 
INFO [taroize] parseScript - 解析CallExpression 
Taro.getSystemInfoSync() 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
getSystemInfoSync 
INFO [taroize] parseScript - 解析Identifier 
windowWidth 
INFO [taroize] parseScript - 解析Identifier 
imgheight 
INFO [taroize] parseScript - 解析Identifier 
e 
INFO [taroize] parseScript - 解析Identifier 
detail 
INFO [taroize] parseScript - 解析Identifier 
height 
INFO [taroize] parseScript - 解析Identifier 
imgwidth 
INFO [taroize] parseScript - 解析Identifier 
e 
INFO [taroize] parseScript - 解析Identifier 
detail 
INFO [taroize] parseScript - 解析Identifier 
width 
INFO [taroize] parseScript - 解析Identifier 
height 
INFO [taroize] parseScript - 解析Identifier 
width 
INFO [taroize] parseScript - 解析Identifier 
imgheight 
INFO [taroize] parseScript - 解析Identifier 
imgwidth 
INFO [taroize] parseScript - 解析CallExpression 
this.setData({
  height: height
}) 
INFO [taroize] parseScript - 解析Identifier 
setData 
INFO [taroize] parseScript - 解析Identifier 
height 
INFO [taroize] parseScript - 解析Identifier 
height 
INFO [taroize] parseScript - 解析Identifier 
changeIndicatorDots 
INFO [taroize] parseScript - 解析BlockStatement 
{
  this.setData({
    indicatorDots: !this.data.indicatorDots
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
this.setData({
  indicatorDots: !this.data.indicatorDots
}) 
INFO [taroize] parseScript - 解析Identifier 
setData 
INFO [taroize] parseScript - 解析Identifier 
indicatorDots 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
indicatorDots 
INFO [taroize] parseScript - 解析Identifier 
changeAutoplay 
INFO [taroize] parseScript - 解析BlockStatement 
{
  this.setData({
    autoplay: !this.data.autoplay
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
this.setData({
  autoplay: !this.data.autoplay
}) 
INFO [taroize] parseScript - 解析Identifier 
setData 
INFO [taroize] parseScript - 解析Identifier 
autoplay 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
autoplay 
INFO [taroize] parseScript - 解析Identifier 
intervalChange 
INFO [taroize] parseScript - 解析Identifier 
e 
INFO [taroize] parseScript - 解析BlockStatement 
{
  this.setData({
    interval: e.detail.value
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
this.setData({
  interval: e.detail.value
}) 
INFO [taroize] parseScript - 解析Identifier 
setData 
INFO [taroize] parseScript - 解析Identifier 
interval 
INFO [taroize] parseScript - 解析Identifier 
e 
INFO [taroize] parseScript - 解析Identifier 
detail 
INFO [taroize] parseScript - 解析Identifier 
value 
INFO [taroize] parseScript - 解析Identifier 
durationChange 
INFO [taroize] parseScript - 解析Identifier 
e 
INFO [taroize] parseScript - 解析BlockStatement 
{
  this.setData({
    duration: e.detail.value
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
this.setData({
  duration: e.detail.value
}) 
INFO [taroize] parseScript - 解析Identifier 
setData 
INFO [taroize] parseScript - 解析Identifier 
duration 
INFO [taroize] parseScript - 解析Identifier 
e 
INFO [taroize] parseScript - 解析Identifier 
detail 
INFO [taroize] parseScript - 解析Identifier 
value 
INFO [taroize] parseScript - 解析Identifier 
toUnitList 
INFO [taroize] parseScript - 解析Identifier 
e 
INFO [taroize] parseScript - 解析BlockStatement 
{
  const {
    place,
    building
  } = e.currentTarget.dataset;
  Taro.setStorage({
    data: {
      place,
      building
    },
    key: "queryDy"
  });
  Taro.navigateTo({
    url: `../unit_list/unit_list`
  });
} 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
e 
INFO [taroize] parseScript - 解析Identifier 
currentTarget 
INFO [taroize] parseScript - 解析Identifier 
dataset 
INFO [taroize] parseScript - 解析CallExpression 
Taro.setStorage({
  data: {
    place,
    building
  },
  key: "queryDy"
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
setStorage 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
key 
INFO [taroize] parseScript - 解析CallExpression 
Taro.navigateTo({
  url: `../unit_list/unit_list`
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
navigateTo 
INFO [taroize] parseScript - 解析Identifier 
url 
INFO [taroize] parseScript - 解析Identifier 
onLoad 
INFO [taroize] parseScript - 解析BlockStatement 
{
  this.getList();
} 
INFO [taroize] parseScript - 解析CallExpression 
this.getList() 
INFO [taroize] parseScript - 解析Identifier 
getList 
INFO [taroize] parseScript - 解析Identifier 
getList 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.request({
    url: app.globalData.host + "/api/wechat/placeFloor",
    method: "GET",
    header: {
      "Content-Type": "application/json"
    },
    data: {
      assign_batch_no: 1
    },
    success: res => {
      const {
        data,
        status
      } = res.data;
      if (status === "success") {
        this.setData({
          data: data
        });
      }
    },
    fail: function (error) {
      console.error("请求出错:", error);
    }
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.request({
  url: app.globalData.host + "/api/wechat/placeFloor",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1
  },
  success: res => {
    const {
      data,
      status
    } = res.data;
    if (status === "success") {
      this.setData({
        data: data
      });
    }
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
request 
INFO [taroize] parseScript - 解析Identifier 
url 
INFO [taroize] parseScript - 解析Identifier 
app 
INFO [taroize] parseScript - 解析Identifier 
globalData 
INFO [taroize] parseScript - 解析Identifier 
host 
INFO [taroize] parseScript - 解析Identifier 
method 
INFO [taroize] parseScript - 解析Identifier 
header 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
assign_batch_no 
INFO [taroize] parseScript - 解析Identifier 
success 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析BlockStatement 
{
  const {
    data,
    status
  } = res.data;
  if (status === "success") {
    this.setData({
      data: data
    });
  }
} 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
status 
INFO [taroize] parseScript - 解析Identifier 
status 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
status 
INFO [taroize] parseScript - 解析BlockStatement 
{
  this.setData({
    data: data
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
this.setData({
  data: data
}) 
INFO [taroize] parseScript - 解析Identifier 
setData 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
fail 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析BlockStatement 
{
  console.error("请求出错:", error);
} 
INFO [taroize] parseScript - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taroize] parseScript - 解析Identifier 
console 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parse - 入参 
option: {"json":"{\"navigationBarTitleText\":\"北四村棚改项目\"}","script":"Page({\r\n  data: {\r\n    logs: [],\r\n  },\r\n  toRoomDetail() {\r\n    wx.showLoading({\r\n      title: \"加载中\",\r\n    });\r\n    wx.downloadFile({\r\n      url: \"https://www.klmxf.com/m/pdf/xfxz.pdf\",\r\n      success: (res) => {\r\n        wx.hideLoading()\r\n          if (res.tempFilePath) {\r\n              wx.openDocument({\r\n                  filePath: res.tempFilePath,\r\n                  fail: (err) => {\r\n                      console.error(err);\r\n                  },\r\n                  complete: () => {\r\n                      wx.hideLoading();\r\n                  }\r\n              })\r\n          }\r\n      },\r\n      fail: (err) => {\r\n          console.error(err);\r\n          wx.hideLoading();\r\n      }\r\n  })\r\n  },\r\n  toRoomDistribution() {\r\n    wx.navigateTo({\r\n      url: '../room_distribution/room_distribution',\r\n    })\r\n  },\r\n  toRoomVideo() {\r\n    wx.navigateTo({\r\n      url: '../room_video/room_video',\r\n    })\r\n  },\r\n  toRoomPosition() {\r\n    wx.navigateTo({\r\n      url: '../room_position/room_position',\r\n    })\r\n  },\r\n  toRoomType() {\r\n    wx.navigateTo({\r\n      url: '../room_type/room_type',\r\n    })\r\n  },\r\n  toRoomFlow() {\r\n    wx.navigateTo({\r\n      url: '../room_flow/room_flow',\r\n    })\r\n  },\r\n  toRoomHandbook() {\r\n    wx.showLoading({\r\n      title: \"加载中\",\r\n    });\r\n    wx.downloadFile({\r\n      url: \"https://www.klmxf.com/m/pdf/xfsc.pdf\",\r\n      success: (res) => {\r\n        wx.hideLoading()\r\n          if (res.tempFilePath) {\r\n              wx.openDocument({\r\n                  filePath: res.tempFilePath,\r\n                  fail: (err) => {\r\n                      console.error(err);\r\n                  },\r\n                  complete: () => {\r\n                      wx.hideLoading();\r\n                  }\r\n              })\r\n          }\r\n      },\r\n      fail: (err) => {\r\n          console.error(err);\r\n          wx.hideLoading();\r\n      }\r\n  })\r\n  },\r\n  onLoad() {},\r\n});\r\n","scriptPath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\info\\info.js","wxml":"<!-- info.wxml -->\r\n<view class=\"container\">\r\n  <view class=\"title\">信息公示</view>\r\n  <view class=\"item\" bindtap=\"toRoomDetail\">\r\n    <view class=\"label\">选房细则</view>\r\n    <view class=\"date\">2023/09/08 23:16:59</view>\r\n  </view>\r\n  <view class=\"item\" bindtap=\"toRoomDistribution\">\r\n    <view class=\"label\">居室分布示意图</view>\r\n    <view class=\"date\">2023/09/08 23:16:59</view>\r\n  </view>\r\n  <view class=\"item\" bindtap=\"toRoomVideo\">\r\n    <view class=\"label\">选房流程动画</view>\r\n    <view class=\"date\">2023/09/08 23:16:59</view>\r\n  </view>\r\n  <view class=\"item\" bindtap=\"toRoomPosition\">\r\n    <view class=\"label\">项目鸟瞰图</view>\r\n    <view class=\"date\">2023/09/08 23:16:59</view>\r\n  </view>\r\n  <view class=\"item\" bindtap=\"toRoomType\">\r\n    <view class=\"label\">户型信息</view>\r\n    <view class=\"date\">2023/09/08 23:16:59</view>\r\n  </view>\r\n  <view class=\"item\" bindtap=\"toRoomFlow\">\r\n    <view class=\"label\">选房流程</view>\r\n    <view class=\"date\">2023/09/08 23:16:59</view>\r\n  </view>\r\n  <view class=\"item\" bindtap=\"toRoomHandbook\">\r\n    <view class=\"label\">选房手册</view>\r\n    <view class=\"date\">2023/09/08 23:16:59</view>\r\n  </view>\r\n</view>","path":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\info","rootPath":"D:\\work\\Floor\\mini-program\\miniprogram","pluginInfo":{"pluginRoot":"","pluginName":"","pages":{},"pagesMap":{},"publicComponents":{},"entryFilePath":""},"logFilePath":"D:\\work\\Floor\\mini-program\\taroConvert\\.convert\\convert.log","templatePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\info\\info.wxml","framework":"React"} 
INFO [taroize] parseWXML - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\info 
parseImport: undefined 
INFO [taroize] parseNode - 入参 
tagName: undefined 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"container"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindtap","value":"toRoomDetail"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindtap","value":"toRoomDistribution"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindtap","value":"toRoomVideo"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindtap","value":"toRoomPosition"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindtap","value":"toRoomType"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindtap","value":"toRoomFlow"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindtap","value":"toRoomHandbook"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] createPreWxmlVistor - 入参 
templates: [object Map] 
INFO [taroize] templateBfs - 进入函数 
INFO [taroize] createWxmlVistor - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\info 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block><View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View></Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomDetail} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomDistribution} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomVideo} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomPosition} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomType} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomFlow} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomHandbook} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomDetail} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomDistribution} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomVideo} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomPosition} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomType} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomFlow} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomHandbook} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomDetail} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomDetail} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
toRoomDetail 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">选房细则</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomDistribution} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomDistribution} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
toRoomDistribution 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">居室分布示意图</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomVideo} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomVideo} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
toRoomVideo 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">选房流程动画</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomPosition} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomPosition} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
toRoomPosition 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">项目鸟瞰图</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomType} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomType} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
toRoomType 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">户型信息</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomFlow} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomFlow} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
toRoomFlow 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">选房流程</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomHandbook} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.toRoomHandbook} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
toRoomHandbook 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">选房手册</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] parseScript - 入参 
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\info\info.js 
INFO [taroize] parseCode - 入参
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\info\info.js 
INFO [taroize] parseScript - 解析CallExpression 
Page({
  data: {
    logs: []
  },
  toRoomDetail() {
    wx.showLoading({
      title: "加载中"
    });
    wx.downloadFile({
      url: "https://www.klmxf.com/m/pdf/xfxz.pdf",
      success: res => {
        wx.hideLoading();
        if (res.tempFilePath) {
          wx.openDocument({
            filePath: res.tempFilePath,
            fail: err => {
              console.error(err);
            },
            complete: () => {
              wx.hideLoading();
            }
          });
        }
      },
      fail: err => {
        console.error(err);
        wx.hideLoading();
      }
    });
  },
  toRoomDistribution() {
    wx.navigateTo({
      url: '../room_distribution/room_distribution'
    });
  },
  toRoomVideo() {
    wx.navigateTo({
      url: '../room_video/room_video'
    });
  },
  toRoomPosition() {
    wx.navigateTo({
      url: '../room_position/room_position'
    });
  },
  toRoomType() {
    wx.navigateTo({
      url: '../room_type/room_type'
    });
  },
  toRoomFlow() {
    wx.navigateTo({
      url: '../room_flow/room_flow'
    });
  },
  toRoomHandbook() {
    wx.showLoading({
      title: "加载中"
    });
    wx.downloadFile({
      url: "https://www.klmxf.com/m/pdf/xfsc.pdf",
      success: res => {
        wx.hideLoading();
        if (res.tempFilePath) {
          wx.openDocument({
            filePath: res.tempFilePath,
            fail: err => {
              console.error(err);
            },
            complete: () => {
              wx.hideLoading();
            }
          });
        }
      },
      fail: err => {
        console.error(err);
        wx.hideLoading();
      }
    });
  },
  onLoad() {}
}) 
INFO [taroize] parsePage - 入参 
pagePath: Page({
  data: {
    logs: []
  },
  toRoomDetail() {
    wx.showLoading({
      title: "加载中"
    });
    wx.downloadFile({
      url: "https://www.klmxf.com/m/pdf/xfxz.pdf",
      success: res => {
        wx.hideLoading();
        if (res.tempFilePath) {
          wx.openDocument({
            filePath: res.tempFilePath,
            fail: err => {
              console.error(err);
            },
            complete: () => {
              wx.hideLoading();
            }
          });
        }
      },
      fail: err => {
        console.error(err);
        wx.hideLoading();
      }
    });
  },
  toRoomDistribution() {
    wx.navigateTo({
      url: '../room_distribution/room_distribution'
    });
  },
  toRoomVideo() {
    wx.navigateTo({
      url: '../room_video/room_video'
    });
  },
  toRoomPosition() {
    wx.navigateTo({
      url: '../room_position/room_position'
    });
  },
  toRoomType() {
    wx.navigateTo({
      url: '../room_type/room_type'
    });
  },
  toRoomFlow() {
    wx.navigateTo({
      url: '../room_flow/room_flow'
    });
  },
  toRoomHandbook() {
    wx.showLoading({
      title: "加载中"
    });
    wx.downloadFile({
      url: "https://www.klmxf.com/m/pdf/xfsc.pdf",
      success: res => {
        wx.hideLoading();
        if (res.tempFilePath) {
          wx.openDocument({
            filePath: res.tempFilePath,
            fail: err => {
              console.error(err);
            },
            complete: () => {
              wx.hideLoading();
            }
          });
        }
      },
      fail: err => {
        console.error(err);
        wx.hideLoading();
      }
    });
  },
  onLoad() {}
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.showLoading({
  title: "加载中"
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.downloadFile({
  url: "https://www.klmxf.com/m/pdf/xfxz.pdf",
  success: res => {
    wx.hideLoading();
    if (res.tempFilePath) {
      wx.openDocument({
        filePath: res.tempFilePath,
        fail: err => {
          console.error(err);
        },
        complete: () => {
          wx.hideLoading();
        }
      });
    }
  },
  fail: err => {
    console.error(err);
    wx.hideLoading();
  }
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.hideLoading() 
INFO [taroize] parsePage - 解析CallExpression 
wx.openDocument({
  filePath: res.tempFilePath,
  fail: err => {
    console.error(err);
  },
  complete: () => {
    wx.hideLoading();
  }
}) 
INFO [taroize] parsePage - 解析CallExpression 
console.error(err) 
INFO [taroize] parsePage - 解析CallExpression 
wx.hideLoading() 
INFO [taroize] parsePage - 解析CallExpression 
console.error(err) 
INFO [taroize] parsePage - 解析CallExpression 
wx.hideLoading() 
INFO [taroize] parsePage - 解析CallExpression 
wx.navigateTo({
  url: '../room_distribution/room_distribution'
}) 
WARN [taroize] replacePluginUrl - 非插件路径 
INFO [taroize] parsePage - 解析CallExpression 
wx.navigateTo({
  url: '../room_video/room_video'
}) 
WARN [taroize] replacePluginUrl - 非插件路径 
INFO [taroize] parsePage - 解析CallExpression 
wx.navigateTo({
  url: '../room_position/room_position'
}) 
WARN [taroize] replacePluginUrl - 非插件路径 
INFO [taroize] parsePage - 解析CallExpression 
wx.navigateTo({
  url: '../room_type/room_type'
}) 
WARN [taroize] replacePluginUrl - 非插件路径 
INFO [taroize] parsePage - 解析CallExpression 
wx.navigateTo({
  url: '../room_flow/room_flow'
}) 
WARN [taroize] replacePluginUrl - 非插件路径 
INFO [taroize] parsePage - 解析CallExpression 
wx.showLoading({
  title: "加载中"
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.downloadFile({
  url: "https://www.klmxf.com/m/pdf/xfsc.pdf",
  success: res => {
    wx.hideLoading();
    if (res.tempFilePath) {
      wx.openDocument({
        filePath: res.tempFilePath,
        fail: err => {
          console.error(err);
        },
        complete: () => {
          wx.hideLoading();
        }
      });
    }
  },
  fail: err => {
    console.error(err);
    wx.hideLoading();
  }
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.hideLoading() 
INFO [taroize] parsePage - 解析CallExpression 
wx.openDocument({
  filePath: res.tempFilePath,
  fail: err => {
    console.error(err);
  },
  complete: () => {
    wx.hideLoading();
  }
}) 
INFO [taroize] parsePage - 解析CallExpression 
console.error(err) 
INFO [taroize] parsePage - 解析CallExpression 
wx.hideLoading() 
INFO [taroize] parsePage - 解析CallExpression 
console.error(err) 
INFO [taroize] parsePage - 解析CallExpression 
wx.hideLoading() 
INFO [taroize] parseScript - 解析Identifier 
Page 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
logs 
INFO [taroize] parseScript - 解析Identifier 
toRoomDetail 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.showLoading({
    title: "加载中"
  });
  Taro.downloadFile({
    url: "https://www.klmxf.com/m/pdf/xfxz.pdf",
    success: res => {
      Taro.hideLoading();
      if (res.tempFilePath) {
        Taro.openDocument({
          filePath: res.tempFilePath,
          fail: err => {
            console.error(err);
          },
          complete: () => {
            Taro.hideLoading();
          }
        });
      }
    },
    fail: err => {
      console.error(err);
      Taro.hideLoading();
    }
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.showLoading({
  title: "加载中"
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
showLoading 
INFO [taroize] parseScript - 解析Identifier 
title 
INFO [taroize] parseScript - 解析CallExpression 
Taro.downloadFile({
  url: "https://www.klmxf.com/m/pdf/xfxz.pdf",
  success: res => {
    Taro.hideLoading();
    if (res.tempFilePath) {
      Taro.openDocument({
        filePath: res.tempFilePath,
        fail: err => {
          console.error(err);
        },
        complete: () => {
          Taro.hideLoading();
        }
      });
    }
  },
  fail: err => {
    console.error(err);
    Taro.hideLoading();
  }
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
downloadFile 
INFO [taroize] parseScript - 解析Identifier 
url 
INFO [taroize] parseScript - 解析Identifier 
success 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.hideLoading();
  if (res.tempFilePath) {
    Taro.openDocument({
      filePath: res.tempFilePath,
      fail: err => {
        console.error(err);
      },
      complete: () => {
        Taro.hideLoading();
      }
    });
  }
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.hideLoading() 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
hideLoading 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
tempFilePath 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.openDocument({
    filePath: res.tempFilePath,
    fail: err => {
      console.error(err);
    },
    complete: () => {
      Taro.hideLoading();
    }
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.openDocument({
  filePath: res.tempFilePath,
  fail: err => {
    console.error(err);
  },
  complete: () => {
    Taro.hideLoading();
  }
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
openDocument 
INFO [taroize] parseScript - 解析Identifier 
filePath 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
tempFilePath 
INFO [taroize] parseScript - 解析Identifier 
fail 
INFO [taroize] parseScript - 解析Identifier 
err 
INFO [taroize] parseScript - 解析BlockStatement 
{
  console.error(err);
} 
INFO [taroize] parseScript - 解析CallExpression 
console.error(err) 
INFO [taroize] parseScript - 解析Identifier 
console 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析Identifier 
err 
INFO [taroize] parseScript - 解析Identifier 
complete 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.hideLoading();
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.hideLoading() 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
hideLoading 
INFO [taroize] parseScript - 解析Identifier 
fail 
INFO [taroize] parseScript - 解析Identifier 
err 
INFO [taroize] parseScript - 解析BlockStatement 
{
  console.error(err);
  Taro.hideLoading();
} 
INFO [taroize] parseScript - 解析CallExpression 
console.error(err) 
INFO [taroize] parseScript - 解析Identifier 
console 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析Identifier 
err 
INFO [taroize] parseScript - 解析CallExpression 
Taro.hideLoading() 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
hideLoading 
INFO [taroize] parseScript - 解析Identifier 
toRoomDistribution 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.navigateTo({
    url: '../room_distribution/room_distribution'
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.navigateTo({
  url: '../room_distribution/room_distribution'
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
navigateTo 
INFO [taroize] parseScript - 解析Identifier 
url 
INFO [taroize] parseScript - 解析Identifier 
toRoomVideo 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.navigateTo({
    url: '../room_video/room_video'
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.navigateTo({
  url: '../room_video/room_video'
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
navigateTo 
INFO [taroize] parseScript - 解析Identifier 
url 
INFO [taroize] parseScript - 解析Identifier 
toRoomPosition 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.navigateTo({
    url: '../room_position/room_position'
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.navigateTo({
  url: '../room_position/room_position'
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
navigateTo 
INFO [taroize] parseScript - 解析Identifier 
url 
INFO [taroize] parseScript - 解析Identifier 
toRoomType 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.navigateTo({
    url: '../room_type/room_type'
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.navigateTo({
  url: '../room_type/room_type'
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
navigateTo 
INFO [taroize] parseScript - 解析Identifier 
url 
INFO [taroize] parseScript - 解析Identifier 
toRoomFlow 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.navigateTo({
    url: '../room_flow/room_flow'
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.navigateTo({
  url: '../room_flow/room_flow'
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
navigateTo 
INFO [taroize] parseScript - 解析Identifier 
url 
INFO [taroize] parseScript - 解析Identifier 
toRoomHandbook 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.showLoading({
    title: "加载中"
  });
  Taro.downloadFile({
    url: "https://www.klmxf.com/m/pdf/xfsc.pdf",
    success: res => {
      Taro.hideLoading();
      if (res.tempFilePath) {
        Taro.openDocument({
          filePath: res.tempFilePath,
          fail: err => {
            console.error(err);
          },
          complete: () => {
            Taro.hideLoading();
          }
        });
      }
    },
    fail: err => {
      console.error(err);
      Taro.hideLoading();
    }
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.showLoading({
  title: "加载中"
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
showLoading 
INFO [taroize] parseScript - 解析Identifier 
title 
INFO [taroize] parseScript - 解析CallExpression 
Taro.downloadFile({
  url: "https://www.klmxf.com/m/pdf/xfsc.pdf",
  success: res => {
    Taro.hideLoading();
    if (res.tempFilePath) {
      Taro.openDocument({
        filePath: res.tempFilePath,
        fail: err => {
          console.error(err);
        },
        complete: () => {
          Taro.hideLoading();
        }
      });
    }
  },
  fail: err => {
    console.error(err);
    Taro.hideLoading();
  }
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
downloadFile 
INFO [taroize] parseScript - 解析Identifier 
url 
INFO [taroize] parseScript - 解析Identifier 
success 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.hideLoading();
  if (res.tempFilePath) {
    Taro.openDocument({
      filePath: res.tempFilePath,
      fail: err => {
        console.error(err);
      },
      complete: () => {
        Taro.hideLoading();
      }
    });
  }
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.hideLoading() 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
hideLoading 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
tempFilePath 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.openDocument({
    filePath: res.tempFilePath,
    fail: err => {
      console.error(err);
    },
    complete: () => {
      Taro.hideLoading();
    }
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.openDocument({
  filePath: res.tempFilePath,
  fail: err => {
    console.error(err);
  },
  complete: () => {
    Taro.hideLoading();
  }
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
openDocument 
INFO [taroize] parseScript - 解析Identifier 
filePath 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
tempFilePath 
INFO [taroize] parseScript - 解析Identifier 
fail 
INFO [taroize] parseScript - 解析Identifier 
err 
INFO [taroize] parseScript - 解析BlockStatement 
{
  console.error(err);
} 
INFO [taroize] parseScript - 解析CallExpression 
console.error(err) 
INFO [taroize] parseScript - 解析Identifier 
console 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析Identifier 
err 
INFO [taroize] parseScript - 解析Identifier 
complete 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.hideLoading();
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.hideLoading() 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
hideLoading 
INFO [taroize] parseScript - 解析Identifier 
fail 
INFO [taroize] parseScript - 解析Identifier 
err 
INFO [taroize] parseScript - 解析BlockStatement 
{
  console.error(err);
  Taro.hideLoading();
} 
INFO [taroize] parseScript - 解析CallExpression 
console.error(err) 
INFO [taroize] parseScript - 解析Identifier 
console 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析Identifier 
err 
INFO [taroize] parseScript - 解析CallExpression 
Taro.hideLoading() 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
hideLoading 
INFO [taroize] parseScript - 解析Identifier 
onLoad 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parse - 入参 
option: {"json":"{\"navigationBarTitleText\":\"北四村棚改项目\"}","script":"Page({\r\n  data: {\r\n    logs: [],\r\n  },\r\n  onLoad() {\r\n    \r\n  },\r\n})\r\n","scriptPath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\project\\project.js","wxml":"<!-- project.wxml -->\r\n<view class=\"container\">\r\n  <view class=\"item\">\r\n    <view class=\"title\">项目鸟瞰图</view>\r\n    <view class=\"block\">\r\n      <image class=\"image\" src=\"https://www.klmxf.com/m/wechat/01.jpg\" mode=\"widthFix\" />\r\n      <!-- <image class=\"image\" src=\"../../img/2.jpg\" mode=\"widthFix\" /> -->\r\n    </view>\r\n  </view>\r\n  <view class=\"item\">\r\n    <view class=\"title\">选房周期</view>\r\n    <view class=\"block\" style=\"padding: 30rpx 16rpx\">\r\n      <view class=\"h5\">第一轮时间：待定</view>\r\n      <view class=\"h5\">第二轮时间：待定</view>\r\n      <view class=\"h5\">第二轮时间：待定</view>\r\n      <view class=\"h6\">具体选房时间以《选房通知单》注明时间为准</view>\r\n    </view>\r\n  </view>\r\n  <view class=\"item\">\r\n    <view class=\"title\">选房大厅地址</view>\r\n    <view class=\"block\">\r\n      <view class=\"text\">选房场地为：昌平区农学院东路</view>\r\n      <image class=\"image\" src=\"https://www.klmxf.com/m/wechat/02.png\" mode=\"widthFix\" />\r\n      <image class=\"image\" src=\"https://www.klmxf.com/m/wechat/03.jpg\" mode=\"widthFix\" />\r\n    </view>\r\n  </view>\r\n  <view class=\"item\">\r\n    <view class=\"title\">选房大厅动向安排</view>\r\n    <view class=\"block\">\r\n      <image class=\"image\" src=\"https://www.klmxf.com/m/wechat/04.jpg\" mode=\"widthFix\" />\r\n      <image class=\"image\" src=\"https://www.klmxf.com/m/wechat/05.png\" mode=\"widthFix\" />\r\n    </view>\r\n  </view>\r\n</view>","path":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\project","rootPath":"D:\\work\\Floor\\mini-program\\miniprogram","pluginInfo":{"pluginRoot":"","pluginName":"","pages":{},"pagesMap":{},"publicComponents":{},"entryFilePath":""},"logFilePath":"D:\\work\\Floor\\mini-program\\taroConvert\\.convert\\convert.log","templatePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\project\\project.wxml","framework":"React"} 
INFO [taroize] parseWXML - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\project 
parseImport: undefined 
INFO [taroize] parseNode - 入参 
tagName: undefined 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"container"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"block"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"https://www.klmxf.com/m/wechat/01.jpg"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"block"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"style","value":"padding: 30rpx 16rpx"} 
INFO [taroize] parseStyle - 入参 
key: style 
value: padding: 0.75rem 0.4rem 
INFO [taroize] parseStyleAttrs - 进入函数 
INFO [taroize] convertStyleAttrs - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"h5"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"h5"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"h5"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"h6"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"block"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"text"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"https://www.klmxf.com/m/wechat/02.png"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"https://www.klmxf.com/m/wechat/03.jpg"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"block"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"https://www.klmxf.com/m/wechat/04.jpg"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"https://www.klmxf.com/m/wechat/05.png"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] createPreWxmlVistor - 入参 
templates: [object Map] 
INFO [taroize] templateBfs - 进入函数 
INFO [taroize] createWxmlVistor - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\project 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block><View className="container"><View className="item"><View className="title">项目鸟瞰图</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image>{
          /*  <image class="image" src="../../img/2.jpg" mode="widthFix" />  */
        }</View></View><View className="item"><View className="title">选房周期</View><View className="block" style={{
        padding: "0.75rem 0.4rem"
      }}><View className="h5">第一轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h6">具体选房时间以《选房通知单》注明时间为准</View></View></View><View className="item"><View className="title">选房大厅地址</View><View className="block"><View className="text">选房场地为：昌平区农学院东路</View><Image className="image" src="https://www.klmxf.com/m/wechat/02.png" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/03.jpg" mode="widthFix"></Image></View></View><View className="item"><View className="title">选房大厅动向安排</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/04.jpg" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/05.png" mode="widthFix"></Image></View></View></View></Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  padding: "0.75rem 0.4rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h6" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/02.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/03.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/04.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/05.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="container"><View className="item"><View className="title">项目鸟瞰图</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image>{
        /*  <image class="image" src="../../img/2.jpg" mode="widthFix" />  */
      }</View></View><View className="item"><View className="title">选房周期</View><View className="block" style={{
      padding: "0.75rem 0.4rem"
    }}><View className="h5">第一轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h6">具体选房时间以《选房通知单》注明时间为准</View></View></View><View className="item"><View className="title">选房大厅地址</View><View className="block"><View className="text">选房场地为：昌平区农学院东路</View><Image className="image" src="https://www.klmxf.com/m/wechat/02.png" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/03.jpg" mode="widthFix"></Image></View></View><View className="item"><View className="title">选房大厅动向安排</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/04.jpg" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/05.png" mode="widthFix"></Image></View></View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  padding: "0.75rem 0.4rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h6" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/02.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/03.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/04.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/05.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="title">项目鸟瞰图</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image>{
      /*  <image class="image" src="../../img/2.jpg" mode="widthFix" />  */
    }</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">项目鸟瞰图</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image>{
    /*  <image class="image" src="../../img/2.jpg" mode="widthFix" />  */
  }</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="title">选房周期</View><View className="block" style={{
    padding: "0.75rem 0.4rem"
  }}><View className="h5">第一轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h6">具体选房时间以《选房通知单》注明时间为准</View></View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  padding: "0.75rem 0.4rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h6" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">选房周期</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="block" style={{
  padding: "0.75rem 0.4rem"
}}><View className="h5">第一轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h6">具体选房时间以《选房通知单》注明时间为准</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  padding: "0.75rem 0.4rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h6" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  padding: "0.75rem 0.4rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析Identifier 
padding 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="h5">第一轮时间：待定</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="h5">第二轮时间：待定</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="h5">第二轮时间：待定</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h5" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="h6">具体选房时间以《选房通知单》注明时间为准</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h6" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="h6" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="title">选房大厅地址</View><View className="block"><View className="text">选房场地为：昌平区农学院东路</View><Image className="image" src="https://www.klmxf.com/m/wechat/02.png" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/03.jpg" mode="widthFix"></Image></View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/02.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/03.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">选房大厅地址</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="block"><View className="text">选房场地为：昌平区农学院东路</View><Image className="image" src="https://www.klmxf.com/m/wechat/02.png" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/03.jpg" mode="widthFix"></Image></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/02.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/03.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="text">选房场地为：昌平区农学院东路</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/02.png" mode="widthFix"></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/02.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/02.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/03.jpg" mode="widthFix"></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/03.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/03.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="title">选房大厅动向安排</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/04.jpg" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/05.png" mode="widthFix"></Image></View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/04.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/05.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">选房大厅动向安排</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/04.jpg" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/05.png" mode="widthFix"></Image></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/04.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/05.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="block" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/04.jpg" mode="widthFix"></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/04.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/04.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/05.png" mode="widthFix"></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/05.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/05.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] parseScript - 入参 
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\project\project.js 
INFO [taroize] parseCode - 入参
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\project\project.js 
INFO [taroize] parseScript - 解析CallExpression 
Page({
  data: {
    logs: []
  },
  onLoad() {}
}) 
INFO [taroize] parsePage - 入参 
pagePath: Page({
  data: {
    logs: []
  },
  onLoad() {}
}) 
INFO [taroize] parseScript - 解析Identifier 
Page 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
logs 
INFO [taroize] parseScript - 解析Identifier 
onLoad 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parse - 入参 
option: {"json":"{\"navigationBarTitleText\":\"北四村棚改项目\"}","script":"// pages/room_position/room_position.ts\r\nPage({\r\n\r\n  /**\r\n   * 页面的初始数据\r\n   */\r\n  data: {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面加载\r\n   */\r\n  onLoad() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面初次渲染完成\r\n   */\r\n  onReady() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面显示\r\n   */\r\n  onShow() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面隐藏\r\n   */\r\n  onHide() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面卸载\r\n   */\r\n  onUnload() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面相关事件处理函数--监听用户下拉动作\r\n   */\r\n  onPullDownRefresh() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面上拉触底事件的处理函数\r\n   */\r\n  onReachBottom() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 用户点击右上角分享\r\n   */\r\n  onShareAppMessage() {\r\n\r\n  }\r\n})","scriptPath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_position\\room_position.js","wxml":"<!-- pages/room_position/room_position.wxml -->\r\n<view class=\"container\">\r\n    <view class=\"title\">信息公示</view>\r\n    <view class=\"item\">\r\n        <view class=\"label\">项目鸟瞰图</view>\r\n        <view class=\"date\">2023/09/08 23:16:59</view>\r\n    </view>\r\n    <image class=\"image\" src=\"https://www.klmxf.com/m/wechat/01.jpg\" mode=\"widthFix\" />\r\n</view>","path":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_position","rootPath":"D:\\work\\Floor\\mini-program\\miniprogram","pluginInfo":{"pluginRoot":"","pluginName":"","pages":{},"pagesMap":{},"publicComponents":{},"entryFilePath":""},"logFilePath":"D:\\work\\Floor\\mini-program\\taroConvert\\.convert\\convert.log","templatePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_position\\room_position.wxml","framework":"React"} 
INFO [taroize] parseWXML - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_position 
parseImport: undefined 
INFO [taroize] parseNode - 入参 
tagName: undefined 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"container"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"https://www.klmxf.com/m/wechat/01.jpg"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] createPreWxmlVistor - 入参 
templates: [object Map] 
INFO [taroize] templateBfs - 进入函数 
INFO [taroize] createWxmlVistor - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_position 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block><View className="container"><View className="title">信息公示</View><View className="item"><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image></View></Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">项目鸟瞰图</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] parseScript - 入参 
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_position\room_position.js 
INFO [taroize] parseCode - 入参
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_position\room_position.js 
INFO [taroize] parseScript - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parsePage - 入参 
pagePath: Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parseScript - 解析Identifier 
Page 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
onLoad 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReady 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShow 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onHide 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onUnload 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onPullDownRefresh 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReachBottom 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShareAppMessage 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parse - 入参 
option: {"json":"{\"navigationBarTitleText\":\"北四村棚改项目\"}","script":"// pages/room_type/room_type.ts\r\nPage({\r\n\r\n  /**\r\n   * 页面的初始数据\r\n   */\r\n  data: {\r\n    imgList:[\r\n      'https://www.klmxf.com/m/wechat/js/1.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/2.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/3.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/4.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/5.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/6.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/7.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/8.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/9.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/10.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/11.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/12.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/13.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/14.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/15.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/16.jpg',         \r\n      'https://www.klmxf.com/m/wechat/js/17.jpg',         \r\n      // 'https://www.klmxf.com/m/wechat/js/18.jpg',  \r\n      ],\r\n  },\r\n\r\n  imgPreview:function(event)\r\n  {\r\n    var src = event.currentTarget.dataset.src;\r\n    var imgList = event.currentTarget.dataset.list;\r\n    wx.previewImage({\r\n      current: src, \r\n      urls: imgList\r\n    })\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面加载\r\n   */\r\n  onLoad() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面初次渲染完成\r\n   */\r\n  onReady() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面显示\r\n   */\r\n  onShow() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面隐藏\r\n   */\r\n  onHide() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面卸载\r\n   */\r\n  onUnload() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面相关事件处理函数--监听用户下拉动作\r\n   */\r\n  onPullDownRefresh() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面上拉触底事件的处理函数\r\n   */\r\n  onReachBottom() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 用户点击右上角分享\r\n   */\r\n  onShareAppMessage() {\r\n\r\n  }\r\n})","scriptPath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_type\\room_type.js","wxml":"<!-- pages/room_type/room_type.wxml -->\r\n<view class=\"container\">\r\n    <view class=\"title\">信息公示</view>\r\n    <view class=\"item\">\r\n        <view class=\"label\">户型信息</view>\r\n        <view class=\"date\">2023/09/08 23:16:59</view>\r\n    </view>\r\n    <view  wx:for=\"{{imgList}}\">  \r\n    <image class=\"image\" wx:key=\"imgs\" src=\"{{item}}\" data-src=\"{{item}}\" mode='widthFix' data-list=\"{{imgList}}\" bindtap=\"imgPreview\" style=\"margin-top: 24rpx;\" />\r\n    </view>\r\n</view>","path":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_type","rootPath":"D:\\work\\Floor\\mini-program\\miniprogram","pluginInfo":{"pluginRoot":"","pluginName":"","pages":{},"pagesMap":{},"publicComponents":{},"entryFilePath":""},"logFilePath":"D:\\work\\Floor\\mini-program\\taroConvert\\.convert\\convert.log","templatePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_type\\room_type.wxml","framework":"React"} 
INFO [taroize] parseWXML - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_type 
parseImport: undefined 
INFO [taroize] parseNode - 入参 
tagName: undefined 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"container"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"wx:for","value":"{{imgList}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"wx:key","value":"imgs"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"{{item}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"data-src","value":"{{item}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"data-list","value":"{{imgList}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindtap","value":"imgPreview"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"style","value":"margin-top: 24rpx"} 
INFO [taroize] parseStyle - 入参 
key: style 
value: margin-top: 0.6rem 
INFO [taroize] parseStyleAttrs - 进入函数 
INFO [taroize] convertStyleAttrs - 进入函数 
INFO [taroize] createPreWxmlVistor - 入参 
templates: [object Map] 
INFO [taroize] templateBfs - 进入函数 
INFO [taroize] createWxmlVistor - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_type 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block><View className="container"><View className="title">信息公示</View><View className="item"><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View wx:for={imgList}><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
        marginTop: "0.6rem"
      }}></Image></View></View></Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:for={imgList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:key="imgs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
wx:key 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-list={imgList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-list 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.imgPreview} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  marginTop: "0.6rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><Block>{imgList.map((item, index) => {
      return <View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
          marginTop: "0.6rem"
        }}></Image></View>;
    })}</Block></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:key="imgs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
wx:key 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-list={imgList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-list 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.imgPreview} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  marginTop: "0.6rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">户型信息</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block>{imgList.map((item, index) => {
    return <View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
        marginTop: "0.6rem"
      }}></Image></View>;
  })}</Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:key="imgs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
wx:key 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-list={imgList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-list 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.imgPreview} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  marginTop: "0.6rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
imgList 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
    marginTop: "0.6rem"
  }}></Image></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:key="imgs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
wx:key 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-list={imgList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-list 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.imgPreview} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  marginTop: "0.6rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
  marginTop: "0.6rem"
}}></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:key="imgs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
wx:key 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-list={imgList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-list 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.imgPreview} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  marginTop: "0.6rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:key="imgs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
wx:key 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-src 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-list={imgList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-list 
INFO [taroize] createWxmlVistor - 解析Identifier 
imgList 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.imgPreview} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
imgPreview 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  marginTop: "0.6rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析Identifier 
marginTop 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
imgList 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
    marginTop: "0.6rem"
  }}></Image></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:key="imgs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
wx:key 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-list={imgList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-list 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.imgPreview} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  marginTop: "0.6rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
  marginTop: "0.6rem"
}}></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:key="imgs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
wx:key 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-list={imgList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-list 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.imgPreview} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  marginTop: "0.6rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:key="imgs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
wx:key 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-src={item} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-src 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-list={imgList} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-list 
INFO [taroize] createWxmlVistor - 解析Identifier 
imgList 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.imgPreview} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
imgPreview 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
style={{
  marginTop: "0.6rem"
}} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
style 
INFO [taroize] createWxmlVistor - 解析Identifier 
marginTop 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] parseScript - 入参 
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_type\room_type.js 
INFO [taroize] parseCode - 入参
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_type\room_type.js 
INFO [taroize] parseScript - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {
    imgList: ['https://www.klmxf.com/m/wechat/js/1.jpg', 'https://www.klmxf.com/m/wechat/js/2.jpg', 'https://www.klmxf.com/m/wechat/js/3.jpg', 'https://www.klmxf.com/m/wechat/js/4.jpg', 'https://www.klmxf.com/m/wechat/js/5.jpg', 'https://www.klmxf.com/m/wechat/js/6.jpg', 'https://www.klmxf.com/m/wechat/js/7.jpg', 'https://www.klmxf.com/m/wechat/js/8.jpg', 'https://www.klmxf.com/m/wechat/js/9.jpg', 'https://www.klmxf.com/m/wechat/js/10.jpg', 'https://www.klmxf.com/m/wechat/js/11.jpg', 'https://www.klmxf.com/m/wechat/js/12.jpg', 'https://www.klmxf.com/m/wechat/js/13.jpg', 'https://www.klmxf.com/m/wechat/js/14.jpg', 'https://www.klmxf.com/m/wechat/js/15.jpg', 'https://www.klmxf.com/m/wechat/js/16.jpg', 'https://www.klmxf.com/m/wechat/js/17.jpg'
    // 'https://www.klmxf.com/m/wechat/js/18.jpg',  
    ]
  },
  imgPreview: function (event) {
    var src = event.currentTarget.dataset.src;
    var imgList = event.currentTarget.dataset.list;
    wx.previewImage({
      current: src,
      urls: imgList
    });
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parsePage - 入参 
pagePath: Page({
  /**
   * 页面的初始数据
   */
  data: {
    imgList: ['https://www.klmxf.com/m/wechat/js/1.jpg', 'https://www.klmxf.com/m/wechat/js/2.jpg', 'https://www.klmxf.com/m/wechat/js/3.jpg', 'https://www.klmxf.com/m/wechat/js/4.jpg', 'https://www.klmxf.com/m/wechat/js/5.jpg', 'https://www.klmxf.com/m/wechat/js/6.jpg', 'https://www.klmxf.com/m/wechat/js/7.jpg', 'https://www.klmxf.com/m/wechat/js/8.jpg', 'https://www.klmxf.com/m/wechat/js/9.jpg', 'https://www.klmxf.com/m/wechat/js/10.jpg', 'https://www.klmxf.com/m/wechat/js/11.jpg', 'https://www.klmxf.com/m/wechat/js/12.jpg', 'https://www.klmxf.com/m/wechat/js/13.jpg', 'https://www.klmxf.com/m/wechat/js/14.jpg', 'https://www.klmxf.com/m/wechat/js/15.jpg', 'https://www.klmxf.com/m/wechat/js/16.jpg', 'https://www.klmxf.com/m/wechat/js/17.jpg'
    // 'https://www.klmxf.com/m/wechat/js/18.jpg',  
    ]
  },
  imgPreview: function (event) {
    var src = event.currentTarget.dataset.src;
    var imgList = event.currentTarget.dataset.list;
    wx.previewImage({
      current: src,
      urls: imgList
    });
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.previewImage({
  current: src,
  urls: imgList
}) 
INFO [taroize] parseScript - 解析Identifier 
Page 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
imgList 
INFO [taroize] parseScript - 解析Identifier 
imgPreview 
INFO [taroize] parseScript - 解析Identifier 
event 
INFO [taroize] parseScript - 解析BlockStatement 
{
  var src = event.currentTarget.dataset.src;
  var imgList = event.currentTarget.dataset.list;
  Taro.previewImage({
    current: src,
    urls: imgList
  });
} 
INFO [taroize] parseScript - 解析Identifier 
src 
INFO [taroize] parseScript - 解析Identifier 
event 
INFO [taroize] parseScript - 解析Identifier 
currentTarget 
INFO [taroize] parseScript - 解析Identifier 
dataset 
INFO [taroize] parseScript - 解析Identifier 
src 
INFO [taroize] parseScript - 解析Identifier 
imgList 
INFO [taroize] parseScript - 解析Identifier 
event 
INFO [taroize] parseScript - 解析Identifier 
currentTarget 
INFO [taroize] parseScript - 解析Identifier 
dataset 
INFO [taroize] parseScript - 解析Identifier 
list 
INFO [taroize] parseScript - 解析CallExpression 
Taro.previewImage({
  current: src,
  urls: imgList
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
previewImage 
INFO [taroize] parseScript - 解析Identifier 
current 
INFO [taroize] parseScript - 解析Identifier 
src 
INFO [taroize] parseScript - 解析Identifier 
urls 
INFO [taroize] parseScript - 解析Identifier 
imgList 
INFO [taroize] parseScript - 解析Identifier 
onLoad 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReady 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShow 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onHide 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onUnload 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onPullDownRefresh 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReachBottom 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShareAppMessage 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parse - 入参 
option: {"json":"{\"navigationBarTitleText\":\"北四村棚改项目\"}","script":"// pages/room_flow/room_flow.ts\r\nPage({\r\n\r\n  /**\r\n   * 页面的初始数据\r\n   */\r\n  data: {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面加载\r\n   */\r\n  onLoad() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面初次渲染完成\r\n   */\r\n  onReady() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面显示\r\n   */\r\n  onShow() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面隐藏\r\n   */\r\n  onHide() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面卸载\r\n   */\r\n  onUnload() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面相关事件处理函数--监听用户下拉动作\r\n   */\r\n  onPullDownRefresh() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面上拉触底事件的处理函数\r\n   */\r\n  onReachBottom() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 用户点击右上角分享\r\n   */\r\n  onShareAppMessage() {\r\n\r\n  }\r\n})","scriptPath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_flow\\room_flow.js","wxml":"<!-- pages/room_flow/room_flow.wxml -->\r\n<view class=\"container\">\r\n    <view class=\"title\">信息公示</view>\r\n    <view class=\"item\">\r\n        <view class=\"label\">选房流程</view>\r\n        <view class=\"date\">2023/09/08 23:16:59</view>\r\n    </view>\r\n    <image class=\"image\" src=\"../../img/room_flow/1.png\"  mode=\"widthFix\" />\r\n</view>","path":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_flow","rootPath":"D:\\work\\Floor\\mini-program\\miniprogram","pluginInfo":{"pluginRoot":"","pluginName":"","pages":{},"pagesMap":{},"publicComponents":{},"entryFilePath":""},"logFilePath":"D:\\work\\Floor\\mini-program\\taroConvert\\.convert\\convert.log","templatePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_flow\\room_flow.wxml","framework":"React"} 
INFO [taroize] parseWXML - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_flow 
parseImport: undefined 
INFO [taroize] parseNode - 入参 
tagName: undefined 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"container"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"../../img/room_flow/1.png"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] createPreWxmlVistor - 入参 
templates: [object Map] 
INFO [taroize] templateBfs - 进入函数 
INFO [taroize] createWxmlVistor - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_flow 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block><View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_flow/1.png" mode="widthFix"></Image></View></Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_flow/1.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_flow/1.png" mode="widthFix"></Image></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_flow/1.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">选房流程</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src="../../img/room_flow/1.png" mode="widthFix"></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_flow/1.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_flow/1.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] parseScript - 入参 
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_flow\room_flow.js 
INFO [taroize] parseCode - 入参
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_flow\room_flow.js 
INFO [taroize] parseScript - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parsePage - 入参 
pagePath: Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parseScript - 解析Identifier 
Page 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
onLoad 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReady 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShow 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onHide 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onUnload 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onPullDownRefresh 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReachBottom 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShareAppMessage 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parse - 入参 
option: {"json":"{\"navigationBarTitleText\":\"北四村棚改项目\"}","script":"// pages/room_handbook/room_handbook.ts\r\nPage({\r\n\r\n  /**\r\n   * 页面的初始数据\r\n   */\r\n  data: {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面加载\r\n   */\r\n  onLoad() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面初次渲染完成\r\n   */\r\n  onReady() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面显示\r\n   */\r\n  onShow() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面隐藏\r\n   */\r\n  onHide() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面卸载\r\n   */\r\n  onUnload() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面相关事件处理函数--监听用户下拉动作\r\n   */\r\n  onPullDownRefresh() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面上拉触底事件的处理函数\r\n   */\r\n  onReachBottom() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 用户点击右上角分享\r\n   */\r\n  onShareAppMessage() {\r\n\r\n  }\r\n})","scriptPath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_handbook\\room_handbook.js","wxml":"<!-- pages/room_handbook/room_handbook.wxml -->\r\n<view class=\"container\">\r\n    <view class=\"title\">信息公示</view>\r\n    <view class=\"item\">\r\n        <view class=\"label\">选房手册</view>\r\n        <view class=\"date\">2023/09/08 23:16:59</view>\r\n    </view>\r\n    <image class=\"image\" src=\"../../img/room_handbook/1.jpg\" mode=\"widthFix\" />\r\n</view>","path":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_handbook","rootPath":"D:\\work\\Floor\\mini-program\\miniprogram","pluginInfo":{"pluginRoot":"","pluginName":"","pages":{},"pagesMap":{},"publicComponents":{},"entryFilePath":""},"logFilePath":"D:\\work\\Floor\\mini-program\\taroConvert\\.convert\\convert.log","templatePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_handbook\\room_handbook.wxml","framework":"React"} 
INFO [taroize] parseWXML - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_handbook 
parseImport: undefined 
INFO [taroize] parseNode - 入参 
tagName: undefined 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"container"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"../../img/room_handbook/1.jpg"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] createPreWxmlVistor - 入参 
templates: [object Map] 
INFO [taroize] templateBfs - 进入函数 
INFO [taroize] createWxmlVistor - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_handbook 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block><View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_handbook/1.jpg" mode="widthFix"></Image></View></Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_handbook/1.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_handbook/1.jpg" mode="widthFix"></Image></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_handbook/1.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">选房手册</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src="../../img/room_handbook/1.jpg" mode="widthFix"></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_handbook/1.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_handbook/1.jpg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] parseScript - 入参 
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_handbook\room_handbook.js 
INFO [taroize] parseCode - 入参
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_handbook\room_handbook.js 
INFO [taroize] parseScript - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parsePage - 入参 
pagePath: Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parseScript - 解析Identifier 
Page 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
onLoad 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReady 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShow 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onHide 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onUnload 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onPullDownRefresh 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReachBottom 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShareAppMessage 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parse - 入参 
option: {"json":"{\"navigationBarTitleText\":\"北四村棚改项目\"}","script":"// pages/unit_list/unit_list.ts\r\nconst app = getApp();\r\n\r\nPage({\r\n  /**\r\n   * 页面的初始数据\r\n   */\r\n  data: {\r\n    place: \"\",\r\n    building: \"\",\r\n    active: \"\",\r\n    units: [\"一单元\", \"三单元\", \"二单元\"],\r\n    data: [],\r\n  },\r\n  getTabList() {\r\n    wx.getStorage({\r\n      key: \"queryDy\",\r\n    }).then((res) => {\r\n      const { place, building } = res.data;\r\n      wx.request({\r\n        url: app.globalData.host + \"/api/wechat/queryDy\",\r\n        method: \"GET\",\r\n        header: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          assign_batch_no: 1,\r\n          place,\r\n          building,\r\n        },\r\n        success: (res) => {\r\n          this.setData({ units: res.data.data, active: res.data.data[0] });\r\n          this.getList(res.data.data[0]);\r\n        },\r\n        fail: function (error) {\r\n          console.error(\"请求出错:\", error);\r\n        },\r\n      });\r\n    });\r\n  },\r\n  init() {\r\n    wx.getStorage({\r\n      key: \"queryDy\",\r\n    }).then((res) => {\r\n      const { place, building } = res.data;\r\n      this.setData({ place, building });\r\n    });\r\n  },\r\n  tabClick(e) {\r\n    const { active } = e.currentTarget.dataset;\r\n    this.setData({ active });\r\n    this.getList(active);\r\n  },\r\n  getList(danYuan) {\r\n    wx.showLoading({\r\n      title: \"加载中\",\r\n    });\r\n    wx.request({\r\n      url: app.globalData.host + \"/api/wechat/queryRoom\",\r\n      method: \"GET\",\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: {\r\n        assign_batch_no: 1,\r\n        place: this.data.place,\r\n        building: this.data.building,\r\n        danYuan,\r\n      },\r\n      success: (res) => {\r\n        this.setData({ data: res.data.data });\r\n        wx.hideLoading();\r\n      },\r\n      fail: function (error) {\r\n        console.error(\"请求出错:\", error);\r\n      },\r\n    });\r\n  },\r\n  /**\r\n   * 生命周期函数--监听页面加载\r\n   */\r\n  onLoad() {\r\n    this.init();\r\n    this.getTabList();\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面初次渲染完成\r\n   */\r\n  onReady() {},\r\n\r\n  /**\r\n   * 生命周期函数--监听页面显示\r\n   */\r\n  onShow() {},\r\n\r\n  /**\r\n   * 生命周期函数--监听页面隐藏\r\n   */\r\n  onHide() {},\r\n\r\n  /**\r\n   * 生命周期函数--监听页面卸载\r\n   */\r\n  onUnload() {},\r\n\r\n  /**\r\n   * 页面相关事件处理函数--监听用户下拉动作\r\n   */\r\n  onPullDownRefresh() {},\r\n\r\n  /**\r\n   * 页面上拉触底事件的处理函数\r\n   */\r\n  onReachBottom() {},\r\n\r\n  /**\r\n   * 用户点击右上角分享\r\n   */\r\n  onShareAppMessage() {},\r\n});\r\n","scriptPath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\unit_list\\unit_list.js","wxml":"<!-- pages/unit_list/unit_list.wxml -->\r\n<view class=\"container\">\r\n    <view class=\"tabs\">\r\n        <view wx:for=\"{{units}}\" wx:for-item=\"unit\" bindtap=\"tabClick\" data-active=\"{{unit}}\" class=\"tab {{active === unit ? 'active':''}}\">\r\n            {{unit}}\r\n        </view>\r\n    </view>\r\n    <view class=\"head\">\r\n        <view class=\"left\">{{place}} - {{building}}</view>\r\n        <view class=\"status_info\">\r\n            <view class=\"item\">\r\n                <image class=\"image\" src=\"../../img/checkbox.svg\" />\r\n                <text>可选</text>\r\n            </view>\r\n            <view class=\"item\">\r\n                <image class=\"image\" src=\"../../img/checkbox_active.svg\" />\r\n                <text>已选</text>\r\n            </view>\r\n        </view>\r\n    </view>\r\n    <view class=\"floor_info\" wx:for=\"{{data}}\" wx:for-item=\"item\">\r\n        <view class=\"room_floor\">{{item.room_floor}}</view>\r\n        <view class=\"house {{item.selected===0?'unselect':''}}\" wx:for=\"{{item.room}}\">\r\n            <image class=\"image\" src=\"{{item.selected===0?'../../img/checkbox.svg':'../../img/checkbox_white.svg'}}\"></image>\r\n            <view class=\"text\">{{item.room_number}}</view>\r\n            <view class=\"status\">{{item.selected===0?\"未选\":\"已选\"}}</view>\r\n        </view>\r\n    </view>\r\n</view>","path":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\unit_list","rootPath":"D:\\work\\Floor\\mini-program\\miniprogram","pluginInfo":{"pluginRoot":"","pluginName":"","pages":{},"pagesMap":{},"publicComponents":{},"entryFilePath":""},"logFilePath":"D:\\work\\Floor\\mini-program\\taroConvert\\.convert\\convert.log","templatePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\unit_list\\unit_list.wxml","framework":"React"} 
INFO [taroize] parseWXML - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\unit_list 
parseImport: undefined 
INFO [taroize] parseNode - 入参 
tagName: undefined 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"container"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"tabs"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"wx:for","value":"{{units}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"wx:for-item","value":"unit"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"bindtap","value":"tabClick"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"data-active","value":"{{unit}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"tab {{active === unit ? 'active':''}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"head"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"left"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"status_info"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"../../img/checkbox.svg"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: text 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"../../img/checkbox_active.svg"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: text 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"floor_info"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"wx:for","value":"{{data}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"wx:for-item","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"room_floor"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"house {{item.selected===0?'unselect':''}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"wx:for","value":"{{item.room}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"{{item.selected===0?'../../img/checkbox.svg':'../../img/checkbox_white.svg'}}"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"text"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"status"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] createPreWxmlVistor - 入参 
templates: [object Map] 
INFO [taroize] templateBfs - 进入函数 
INFO [taroize] createWxmlVistor - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\unit_list 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block><View className="container"><View className="tabs"><View wx:for={units} wx:for-item="unit" onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View></View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src="../../img/checkbox.svg"></Image><Text>可选</Text></View><View className="item"><Image className="image" src="../../img/checkbox_active.svg"></Image><Text>已选</Text></View></View></View><View className="floor_info" wx:for={data} wx:for-item="item"><View className="room_floor">{item.room_floor}</View><View className={"house " + (item.selected === 0 ? 'unselect' : '')} wx:for={item.room}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View></View></View></Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="tabs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:for={units} 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.tabClick} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-active={unit} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-active 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"tab " + (active === unit ? 'active' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.tabClick} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-active={unit} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-active 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"tab " + (active === unit ? 'active' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="head" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="left" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox_active.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="floor_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:for={data} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="floor_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="room_floor" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
wx:for={item.room} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="container"><View className="tabs"><Block>{units.map((unit, index) => {
        return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
      })}</Block></View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src="../../img/checkbox.svg"></Image><Text>可选</Text></View><View className="item"><Image className="image" src="../../img/checkbox_active.svg"></Image><Text>已选</Text></View></View></View><Block>{data.map((item, index) => {
      return <View className="floor_info"><View className="room_floor">{item.room_floor}</View><Block>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</Block></View>;
    })}</Block></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="tabs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.tabClick} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-active={unit} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-active 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"tab " + (active === unit ? 'active' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="head" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="left" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox_active.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="floor_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="room_floor" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="tabs"><Block>{units.map((unit, index) => {
      return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
    })}</Block></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="tabs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.tabClick} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-active={unit} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-active 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"tab " + (active === unit ? 'active' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="tabs" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block>{units.map((unit, index) => {
    return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
  })}</Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.tabClick} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-active={unit} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-active 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"tab " + (active === unit ? 'active' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
units 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
unit 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.tabClick} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-active={unit} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-active 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"tab " + (active === unit ? 'active' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.tabClick} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
tabClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-active={unit} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-active 
INFO [taroize] createWxmlVistor - 解析Identifier 
unit 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"tab " + (active === unit ? 'active' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
active 
INFO [taroize] createWxmlVistor - 解析Identifier 
unit 
INFO [taroize] createWxmlVistor - 解析Identifier 
unit 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
units 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
unit 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.tabClick} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-active={unit} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-active 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"tab " + (active === unit ? 'active' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
onClick={this.tabClick} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
onClick 
INFO [taroize] createWxmlVistor - 解析Identifier 
tabClick 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
data-active={unit} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
data-active 
INFO [taroize] createWxmlVistor - 解析Identifier 
unit 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"tab " + (active === unit ? 'active' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
active 
INFO [taroize] createWxmlVistor - 解析Identifier 
unit 
INFO [taroize] createWxmlVistor - 解析Identifier 
unit 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src="../../img/checkbox.svg"></Image><Text>可选</Text></View><View className="item"><Image className="image" src="../../img/checkbox_active.svg"></Image><Text>已选</Text></View></View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="head" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="left" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox_active.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="head" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="left">{place + " - " + building}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="left" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="left" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
place 
INFO [taroize] createWxmlVistor - 解析Identifier 
building 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="status_info"><View className="item"><Image className="image" src="../../img/checkbox.svg"></Image><Text>可选</Text></View><View className="item"><Image className="image" src="../../img/checkbox_active.svg"></Image><Text>已选</Text></View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox_active.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><Image className="image" src="../../img/checkbox.svg"></Image><Text>可选</Text></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src="../../img/checkbox.svg"></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Text>可选</Text> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><Image className="image" src="../../img/checkbox_active.svg"></Image><Text>已选</Text></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox_active.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src="../../img/checkbox_active.svg"></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox_active.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/checkbox_active.svg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Text>已选</Text> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Text 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block>{data.map((item, index) => {
    return <View className="floor_info"><View className="room_floor">{item.room_floor}</View><Block>{item.room.map((item, index) => {
          return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
        })}</Block></View>;
  })}</Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="floor_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="room_floor" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
data 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="floor_info"><View className="room_floor">{item.room_floor}</View><Block>{item.room.map((item, index) => {
      return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
    })}</Block></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="floor_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="room_floor" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="floor_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="room_floor">{item.room_floor}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="room_floor" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="room_floor" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
room_floor 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block>{item.room.map((item, index) => {
    return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
  })}</Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
room 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
selected 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
selected 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="text">{item.room_number}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
room_number 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="status">{item.selected === 0 ? "未选" : "已选"}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
selected 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
room 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
selected 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
selected 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="text">{item.room_number}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
room_number 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="status">{item.selected === 0 ? "未选" : "已选"}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
selected 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析Identifier 
data 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
    return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
  })}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="floor_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="room_floor" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="floor_info" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="room_floor">{item.room_floor}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="room_floor" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="room_floor" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
room_floor 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
room 
INFO [taroize] createWxmlVistor - 解析Identifier 
map 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
index 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className={"house " + (item.selected === 0 ? 'unselect' : '')} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
selected 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'} 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
selected 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="text">{item.room_number}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="text" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
room_number 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="status">{item.selected === 0 ? "未选" : "已选"}</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="status" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析Identifier 
item 
INFO [taroize] createWxmlVistor - 解析Identifier 
selected 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] parseScript - 入参 
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\unit_list\unit_list.js 
INFO [taroize] parseCode - 入参
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\unit_list\unit_list.js 
INFO [taroize] parseScript - 解析Identifier 
app 
INFO [taroize] parseScript - 解析CallExpression 
getApp() 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
getApp 
INFO [taroize] parseScript - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {
    place: "",
    building: "",
    active: "",
    units: ["一单元", "三单元", "二单元"],
    data: []
  },
  getTabList() {
    wx.getStorage({
      key: "queryDy"
    }).then(res => {
      const {
        place,
        building
      } = res.data;
      wx.request({
        url: app.globalData.host + "/api/wechat/queryDy",
        method: "GET",
        header: {
          "Content-Type": "application/json"
        },
        data: {
          assign_batch_no: 1,
          place,
          building
        },
        success: res => {
          this.setData({
            units: res.data.data,
            active: res.data.data[0]
          });
          this.getList(res.data.data[0]);
        },
        fail: function (error) {
          console.error("请求出错:", error);
        }
      });
    });
  },
  init() {
    wx.getStorage({
      key: "queryDy"
    }).then(res => {
      const {
        place,
        building
      } = res.data;
      this.setData({
        place,
        building
      });
    });
  },
  tabClick(e) {
    const {
      active
    } = e.currentTarget.dataset;
    this.setData({
      active
    });
    this.getList(active);
  },
  getList(danYuan) {
    wx.showLoading({
      title: "加载中"
    });
    wx.request({
      url: app.globalData.host + "/api/wechat/queryRoom",
      method: "GET",
      header: {
        "Content-Type": "application/json"
      },
      data: {
        assign_batch_no: 1,
        place: this.data.place,
        building: this.data.building,
        danYuan
      },
      success: res => {
        this.setData({
          data: res.data.data
        });
        wx.hideLoading();
      },
      fail: function (error) {
        console.error("请求出错:", error);
      }
    });
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {
    this.init();
    this.getTabList();
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parsePage - 入参 
pagePath: Page({
  /**
   * 页面的初始数据
   */
  data: {
    place: "",
    building: "",
    active: "",
    units: ["一单元", "三单元", "二单元"],
    data: []
  },
  getTabList() {
    wx.getStorage({
      key: "queryDy"
    }).then(res => {
      const {
        place,
        building
      } = res.data;
      wx.request({
        url: app.globalData.host + "/api/wechat/queryDy",
        method: "GET",
        header: {
          "Content-Type": "application/json"
        },
        data: {
          assign_batch_no: 1,
          place,
          building
        },
        success: res => {
          this.setData({
            units: res.data.data,
            active: res.data.data[0]
          });
          this.getList(res.data.data[0]);
        },
        fail: function (error) {
          console.error("请求出错:", error);
        }
      });
    });
  },
  init() {
    wx.getStorage({
      key: "queryDy"
    }).then(res => {
      const {
        place,
        building
      } = res.data;
      this.setData({
        place,
        building
      });
    });
  },
  tabClick(e) {
    const {
      active
    } = e.currentTarget.dataset;
    this.setData({
      active
    });
    this.getList(active);
  },
  getList(danYuan) {
    wx.showLoading({
      title: "加载中"
    });
    wx.request({
      url: app.globalData.host + "/api/wechat/queryRoom",
      method: "GET",
      header: {
        "Content-Type": "application/json"
      },
      data: {
        assign_batch_no: 1,
        place: this.data.place,
        building: this.data.building,
        danYuan
      },
      success: res => {
        this.setData({
          data: res.data.data
        });
        wx.hideLoading();
      },
      fail: function (error) {
        console.error("请求出错:", error);
      }
    });
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {
    this.init();
    this.getTabList();
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.getStorage({
  key: "queryDy"
}).then(res => {
  const {
    place,
    building
  } = res.data;
  wx.request({
    url: app.globalData.host + "/api/wechat/queryDy",
    method: "GET",
    header: {
      "Content-Type": "application/json"
    },
    data: {
      assign_batch_no: 1,
      place,
      building
    },
    success: res => {
      this.setData({
        units: res.data.data,
        active: res.data.data[0]
      });
      this.getList(res.data.data[0]);
    },
    fail: function (error) {
      console.error("请求出错:", error);
    }
  });
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.getStorage({
  key: "queryDy"
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.request({
  url: app.globalData.host + "/api/wechat/queryDy",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1,
    place,
    building
  },
  success: res => {
    this.setData({
      units: res.data.data,
      active: res.data.data[0]
    });
    this.getList(res.data.data[0]);
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taroize] parsePage - 解析CallExpression 
this.setData({
  units: res.data.data,
  active: res.data.data[0]
}) 
INFO [taroize] parsePage - 解析CallExpression 
this.getList(res.data.data[0]) 
INFO [taroize] parsePage - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taroize] parsePage - 解析CallExpression 
wx.getStorage({
  key: "queryDy"
}).then(res => {
  const {
    place,
    building
  } = res.data;
  this.setData({
    place,
    building
  });
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.getStorage({
  key: "queryDy"
}) 
INFO [taroize] parsePage - 解析CallExpression 
this.setData({
  place,
  building
}) 
INFO [taroize] parsePage - 解析CallExpression 
this.setData({
  active
}) 
INFO [taroize] parsePage - 解析CallExpression 
this.getList(active) 
INFO [taroize] parsePage - 解析CallExpression 
wx.showLoading({
  title: "加载中"
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.request({
  url: app.globalData.host + "/api/wechat/queryRoom",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1,
    place: this.data.place,
    building: this.data.building,
    danYuan
  },
  success: res => {
    this.setData({
      data: res.data.data
    });
    wx.hideLoading();
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taroize] parsePage - 解析CallExpression 
this.setData({
  data: res.data.data
}) 
INFO [taroize] parsePage - 解析CallExpression 
wx.hideLoading() 
INFO [taroize] parsePage - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taroize] parsePage - 解析CallExpression 
this.init() 
INFO [taroize] parsePage - 解析CallExpression 
this.getTabList() 
INFO [taroize] parseScript - 解析Identifier 
Page 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
active 
INFO [taroize] parseScript - 解析Identifier 
units 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
getTabList 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.getStorage({
    key: "queryDy"
  }).then(res => {
    const {
      place,
      building
    } = res.data;
    Taro.request({
      url: app.globalData.host + "/api/wechat/queryDy",
      method: "GET",
      header: {
        "Content-Type": "application/json"
      },
      data: {
        assign_batch_no: 1,
        place,
        building
      },
      success: res => {
        this.setData({
          units: res.data.data,
          active: res.data.data[0]
        });
        this.getList(res.data.data[0]);
      },
      fail: function (error) {
        console.error("请求出错:", error);
      }
    });
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}).then(res => {
  const {
    place,
    building
  } = res.data;
  Taro.request({
    url: app.globalData.host + "/api/wechat/queryDy",
    method: "GET",
    header: {
      "Content-Type": "application/json"
    },
    data: {
      assign_batch_no: 1,
      place,
      building
    },
    success: res => {
      this.setData({
        units: res.data.data,
        active: res.data.data[0]
      });
      this.getList(res.data.data[0]);
    },
    fail: function (error) {
      console.error("请求出错:", error);
    }
  });
}) 
INFO [taroize] parseScript - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
getStorage 
INFO [taroize] parseScript - 解析Identifier 
key 
INFO [taroize] parseScript - 解析Identifier 
then 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析BlockStatement 
{
  const {
    place,
    building
  } = res.data;
  Taro.request({
    url: app.globalData.host + "/api/wechat/queryDy",
    method: "GET",
    header: {
      "Content-Type": "application/json"
    },
    data: {
      assign_batch_no: 1,
      place,
      building
    },
    success: res => {
      this.setData({
        units: res.data.data,
        active: res.data.data[0]
      });
      this.getList(res.data.data[0]);
    },
    fail: function (error) {
      console.error("请求出错:", error);
    }
  });
} 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析CallExpression 
Taro.request({
  url: app.globalData.host + "/api/wechat/queryDy",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1,
    place,
    building
  },
  success: res => {
    this.setData({
      units: res.data.data,
      active: res.data.data[0]
    });
    this.getList(res.data.data[0]);
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
request 
INFO [taroize] parseScript - 解析Identifier 
url 
INFO [taroize] parseScript - 解析Identifier 
app 
INFO [taroize] parseScript - 解析Identifier 
globalData 
INFO [taroize] parseScript - 解析Identifier 
host 
INFO [taroize] parseScript - 解析Identifier 
method 
INFO [taroize] parseScript - 解析Identifier 
header 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
assign_batch_no 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
success 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析BlockStatement 
{
  this.setData({
    units: res.data.data,
    active: res.data.data[0]
  });
  this.getList(res.data.data[0]);
} 
INFO [taroize] parseScript - 解析CallExpression 
this.setData({
  units: res.data.data,
  active: res.data.data[0]
}) 
INFO [taroize] parseScript - 解析Identifier 
setData 
INFO [taroize] parseScript - 解析Identifier 
units 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
active 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析CallExpression 
this.getList(res.data.data[0]) 
INFO [taroize] parseScript - 解析Identifier 
getList 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
fail 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析BlockStatement 
{
  console.error("请求出错:", error);
} 
INFO [taroize] parseScript - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taroize] parseScript - 解析Identifier 
console 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析Identifier 
init 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.getStorage({
    key: "queryDy"
  }).then(res => {
    const {
      place,
      building
    } = res.data;
    this.setData({
      place,
      building
    });
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}).then(res => {
  const {
    place,
    building
  } = res.data;
  this.setData({
    place,
    building
  });
}) 
INFO [taroize] parseScript - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
getStorage 
INFO [taroize] parseScript - 解析Identifier 
key 
INFO [taroize] parseScript - 解析Identifier 
then 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析BlockStatement 
{
  const {
    place,
    building
  } = res.data;
  this.setData({
    place,
    building
  });
} 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析CallExpression 
this.setData({
  place,
  building
}) 
INFO [taroize] parseScript - 解析Identifier 
setData 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
tabClick 
INFO [taroize] parseScript - 解析Identifier 
e 
INFO [taroize] parseScript - 解析BlockStatement 
{
  const {
    active
  } = e.currentTarget.dataset;
  this.setData({
    active
  });
  this.getList(active);
} 
INFO [taroize] parseScript - 解析Identifier 
active 
INFO [taroize] parseScript - 解析Identifier 
active 
INFO [taroize] parseScript - 解析Identifier 
e 
INFO [taroize] parseScript - 解析Identifier 
currentTarget 
INFO [taroize] parseScript - 解析Identifier 
dataset 
INFO [taroize] parseScript - 解析CallExpression 
this.setData({
  active
}) 
INFO [taroize] parseScript - 解析Identifier 
setData 
INFO [taroize] parseScript - 解析Identifier 
active 
INFO [taroize] parseScript - 解析Identifier 
active 
INFO [taroize] parseScript - 解析CallExpression 
this.getList(active) 
INFO [taroize] parseScript - 解析Identifier 
getList 
INFO [taroize] parseScript - 解析Identifier 
active 
INFO [taroize] parseScript - 解析Identifier 
getList 
INFO [taroize] parseScript - 解析Identifier 
danYuan 
INFO [taroize] parseScript - 解析BlockStatement 
{
  Taro.showLoading({
    title: "加载中"
  });
  Taro.request({
    url: app.globalData.host + "/api/wechat/queryRoom",
    method: "GET",
    header: {
      "Content-Type": "application/json"
    },
    data: {
      assign_batch_no: 1,
      place: this.data.place,
      building: this.data.building,
      danYuan
    },
    success: res => {
      this.setData({
        data: res.data.data
      });
      Taro.hideLoading();
    },
    fail: function (error) {
      console.error("请求出错:", error);
    }
  });
} 
INFO [taroize] parseScript - 解析CallExpression 
Taro.showLoading({
  title: "加载中"
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
showLoading 
INFO [taroize] parseScript - 解析Identifier 
title 
INFO [taroize] parseScript - 解析CallExpression 
Taro.request({
  url: app.globalData.host + "/api/wechat/queryRoom",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1,
    place: this.data.place,
    building: this.data.building,
    danYuan
  },
  success: res => {
    this.setData({
      data: res.data.data
    });
    Taro.hideLoading();
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
request 
INFO [taroize] parseScript - 解析Identifier 
url 
INFO [taroize] parseScript - 解析Identifier 
app 
INFO [taroize] parseScript - 解析Identifier 
globalData 
INFO [taroize] parseScript - 解析Identifier 
host 
INFO [taroize] parseScript - 解析Identifier 
method 
INFO [taroize] parseScript - 解析Identifier 
header 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
assign_batch_no 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
place 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
building 
INFO [taroize] parseScript - 解析Identifier 
danYuan 
INFO [taroize] parseScript - 解析Identifier 
danYuan 
INFO [taroize] parseScript - 解析Identifier 
success 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析BlockStatement 
{
  this.setData({
    data: res.data.data
  });
  Taro.hideLoading();
} 
INFO [taroize] parseScript - 解析CallExpression 
this.setData({
  data: res.data.data
}) 
INFO [taroize] parseScript - 解析Identifier 
setData 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
res 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析CallExpression 
Taro.hideLoading() 
INFO [taroize] parseScript - 解析Identifier 
Taro 
INFO [taroize] parseScript - 解析Identifier 
hideLoading 
INFO [taroize] parseScript - 解析Identifier 
fail 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析BlockStatement 
{
  console.error("请求出错:", error);
} 
INFO [taroize] parseScript - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taroize] parseScript - 解析Identifier 
console 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析Identifier 
error 
INFO [taroize] parseScript - 解析Identifier 
onLoad 
INFO [taroize] parseScript - 解析BlockStatement 
{
  this.init();
  this.getTabList();
} 
INFO [taroize] parseScript - 解析CallExpression 
this.init() 
INFO [taroize] parseScript - 解析Identifier 
init 
INFO [taroize] parseScript - 解析CallExpression 
this.getTabList() 
INFO [taroize] parseScript - 解析Identifier 
getTabList 
INFO [taroize] parseScript - 解析Identifier 
onReady 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShow 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onHide 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onUnload 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onPullDownRefresh 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReachBottom 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShareAppMessage 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taro-cli-convertor] parseAst - 入参 
{"sourceFilePath":"D:\\work\\Floor\\mini-program\\miniprogram\\app.js","outputFilePath":"D:/work/Floor/mini-program/taroConvert/src/app.js","importStylePath":null,"imports":[]} 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import { Block } from "@tarojs/components"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\app.js 
value: @tarojs/components 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import React from "react"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\app.js 
value: react 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import Taro from "@tarojs/taro"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\app.js 
value: @tarojs/taro 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\app.js 
value: @tarojs/with-weapp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
App({
  globalData: {
    host: "https://www.klmxf.com"
  },
  onLaunch() {
    // 展示本地存储能力
    const logs = Taro.getStorageSync("logs") || [];
    logs.unshift(Date.now());
    Taro.setStorageSync("logs", logs);

    // 登录
    Taro.login({
      success: res => {
        console.log(res.code);
        // 发送 res.code 到后台换取 openId, sessionKey, unionId
      }
    });
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.setOptionsToCache({
  globalData: {
    host: "https://www.klmxf.com"
  },
  onLaunch() {
    // 展示本地存储能力
    const logs = Taro.getStorageSync("logs") || [];
    logs.unshift(Date.now());
    Taro.setStorageSync("logs", logs);

    // 登录
    Taro.login({
      success: res => {
        console.log(res.code);
        // 发送 res.code 到后台换取 openId, sessionKey, unionId
      }
    });
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.setOptionsToCache 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.getStorageSync("logs") 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.getStorageSync 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
logs.unshift(Date.now()) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
logs.unshift 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Date.now() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Date.now 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.setStorageSync("logs", logs) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.setStorageSync 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.login({
  success: res => {
    console.log(res.code);
    // 发送 res.code 到后台换取 openId, sessionKey, unionId
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.login 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
console.log(res.code) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
console.log 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.code 
INFO [taro-cli-convertor] parseAst - 解析ClassDeclaration 
@withWeapp(cacheOptions.getOptionsFromCache(), true)
class App extends React.Component {
  render() {
    return this.props.children;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache(), true) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.getOptionsFromCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
React.Component 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.props.children 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.props 
INFO [taro-cli-convertor] parseAst - 解析ExportDefaultDeclaration 
export default App; 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/components" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"react" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/taro" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://www.klmxf.com" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"logs" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"logs" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
cacheOptions 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
default: withWeapp 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.setOptionsToCache({
  globalData: {
    host: "https://www.klmxf.com"
  },
  onLaunch() {
    // 展示本地存储能力
    const logs = Taro.getStorageSync("logs") || [];
    logs.unshift(Date.now());
    Taro.setStorageSync("logs", logs);

    // 登录
    Taro.login({
      success: res => {
        console.log(res.code);
        // 发送 res.code 到后台换取 openId, sessionKey, unionId
      }
    });
  }
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
globalData: {
  host: "https://www.klmxf.com"
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
host: "https://www.klmxf.com" 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.getStorageSync("logs") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
logs.unshift(Date.now()) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Date.now() 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.setStorageSync("logs", logs) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.login({
  success: res => {
    console.log(res.code);
    // 发送 res.code 到后台换取 openId, sessionKey, unionId
  }
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
success: res => {
  console.log(res.code);
  // 发送 res.code 到后台换取 openId, sessionKey, unionId
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
console.log(res.code) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache(), true) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] convertToOptional - 解析ClassBody 
{
  render() {
    return this.props.children;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    return this.props.children;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    return this.props.children;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  cacheOptions
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  default: withWeapp
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
// 展示本地存储能力
const logs = Taro.getStorageSync("logs") || []; 
INFO [taro-cli-convertor] traversePages - 开始转换页面 
pages/index/index 
INFO [taro-cli-convertor] parseAst - 入参 
{"sourceFilePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\index\\index.js","outputFilePath":"D:/work/Floor/mini-program/taroConvert/src/pages/index/index.js","importStylePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\index\\index.css","depComponents":{},"imports":[],"pluginComponents":{}} 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import { Block, View, Swiper, SwiperItem, Image, Text } from "@tarojs/components"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\index\index.js 
value: @tarojs/components 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import React from "react"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\index\index.js 
value: react 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import Taro from "@tarojs/taro"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\index\index.js 
value: @tarojs/taro 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\index\index.js 
value: @tarojs/with-weapp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.getApp() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.getApp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Page({
  data: {
    indicatorDots: true,
    vertical: false,
    autoplay: true,
    interval: 2000,
    duration: 500,
    circular: true,
    height: "",
    data: []
  },
  goheight(e) {
    var width = Taro.getSystemInfoSync().windowWidth;
    //获取可使用窗口宽度
    var imgheight = e.detail.height;
    //获取图片实际高度
    var imgwidth = e.detail.width;
    //获取图片实际宽度
    var height = width * imgheight / imgwidth + "px";
    //计算等比swiper高度
    this.setData({
      height: height
    });
  },
  changeIndicatorDots() {
    this.setData({
      indicatorDots: !this.data.indicatorDots
    });
  },
  changeAutoplay() {
    this.setData({
      autoplay: !this.data.autoplay
    });
  },
  intervalChange(e) {
    this.setData({
      interval: e.detail.value
    });
  },
  durationChange(e) {
    this.setData({
      duration: e.detail.value
    });
  },
  toUnitList(e) {
    const {
      place,
      building
    } = e.currentTarget.dataset;
    Taro.setStorage({
      data: {
        place,
        building
      },
      key: "queryDy"
    });
    Taro.navigateTo({
      url: `../unit_list/unit_list`
    });
  },
  onLoad() {
    this.getList();
  },
  getList() {
    Taro.request({
      url: app.globalData.host + "/api/wechat/placeFloor",
      method: "GET",
      header: {
        "Content-Type": "application/json"
      },
      data: {
        assign_batch_no: 1
      },
      success: res => {
        const {
          data,
          status
        } = res.data;
        if (status === "success") {
          this.setData({
            data: data
          });
        }
      },
      fail: function (error) {
        console.error("请求出错:", error);
      }
    });
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.setOptionsToCache({
  data: {
    indicatorDots: true,
    vertical: false,
    autoplay: true,
    interval: 2000,
    duration: 500,
    circular: true,
    height: "",
    data: []
  },
  goheight(e) {
    var width = Taro.getSystemInfoSync().windowWidth;
    //获取可使用窗口宽度
    var imgheight = e.detail.height;
    //获取图片实际高度
    var imgwidth = e.detail.width;
    //获取图片实际宽度
    var height = width * imgheight / imgwidth + "px";
    //计算等比swiper高度
    this.setData({
      height: height
    });
  },
  changeIndicatorDots() {
    this.setData({
      indicatorDots: !this.data.indicatorDots
    });
  },
  changeAutoplay() {
    this.setData({
      autoplay: !this.data.autoplay
    });
  },
  intervalChange(e) {
    this.setData({
      interval: e.detail.value
    });
  },
  durationChange(e) {
    this.setData({
      duration: e.detail.value
    });
  },
  toUnitList(e) {
    const {
      place,
      building
    } = e.currentTarget.dataset;
    Taro.setStorage({
      data: {
        place,
        building
      },
      key: "queryDy"
    });
    Taro.navigateTo({
      url: `../unit_list/unit_list`
    });
  },
  onLoad() {
    this.getList();
  },
  getList() {
    Taro.request({
      url: app.globalData.host + "/api/wechat/placeFloor",
      method: "GET",
      header: {
        "Content-Type": "application/json"
      },
      data: {
        assign_batch_no: 1
      },
      success: res => {
        const {
          data,
          status
        } = res.data;
        if (status === "success") {
          this.setData({
            data: data
          });
        }
      },
      fail: function (error) {
        console.error("请求出错:", error);
      }
    });
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.setOptionsToCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.getSystemInfoSync().windowWidth 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.getSystemInfoSync() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.getSystemInfoSync 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.detail.height 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.detail 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.detail.width 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.detail 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.setData({
  height: height
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.setData 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.setData({
  indicatorDots: !this.data.indicatorDots
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.setData 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.data.indicatorDots 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.data 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.setData({
  autoplay: !this.data.autoplay
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.setData 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.data.autoplay 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.data 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.setData({
  interval: e.detail.value
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.setData 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.detail.value 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.detail 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.setData({
  duration: e.detail.value
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.setData 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.detail.value 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.detail 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.currentTarget.dataset 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
getTarget(e.currentTarget, Taro) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.currentTarget 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.setStorage({
  data: {
    place,
    building
  },
  key: "queryDy"
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.setStorage 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.navigateTo({
  url: `../unit_list/unit_list`
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.navigateTo 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.getList() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.getList 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.request({
  url: app.globalData.host + "/api/wechat/placeFloor",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1
  },
  success: res => {
    const {
      data,
      status
    } = res.data;
    if (status === "success") {
      this.setData({
        data: data
      });
    }
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.request 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
app.globalData.host 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
app.globalData 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.setData({
  data: data
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.setData 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
console.error 
INFO [taro-cli-convertor] parseAst - 解析ClassDeclaration 
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.getOptionsFromCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
React.Component 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.data 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
    height: `${height}`
  }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data.map((item, index) => {
    return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
          return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
        })}</View></View>;
  })}</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
  height: `${height}`
}}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.goheight 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.goheight 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
data.map((item, index) => {
  return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
        return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
      })}</View></View>;
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
data.map 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
      return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
    })}</View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">{item.place + "地块"}</View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
item.place 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="block">{item.building.map((building, index) => {
    return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
  })}</View> 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
item.building.map((building, index) => {
  return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
item.building.map 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
item.building 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.toUnitList 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
item.place 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Text>{building}</Text> 
INFO [taro-cli-convertor] parseAst - 解析ExportDefaultDeclaration 
export default _C; 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/components" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"react" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/taro" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"px" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"queryDy" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"/api/wechat/placeFloor" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"GET" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"Content-Type" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"application/json" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"success" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"请求出错:" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"container" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://www.klmxf.com/m/wechat/banner/banner1.jpg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"swiper-item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://www.klmxf.com/m/wechat/banner/banner2.jpg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"swiper-item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"地块" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"block" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"text" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
getTarget 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
cacheOptions 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
default: withWeapp 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.getApp() 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.setOptionsToCache({
  data: {
    indicatorDots: true,
    vertical: false,
    autoplay: true,
    interval: 2000,
    duration: 500,
    circular: true,
    height: "",
    data: []
  },
  goheight(e) {
    var width = Taro.getSystemInfoSync().windowWidth;
    //获取可使用窗口宽度
    var imgheight = e.detail.height;
    //获取图片实际高度
    var imgwidth = e.detail.width;
    //获取图片实际宽度
    var height = width * imgheight / imgwidth + "px";
    //计算等比swiper高度
    this.setData({
      height: height
    });
  },
  changeIndicatorDots() {
    this.setData({
      indicatorDots: !this.data.indicatorDots
    });
  },
  changeAutoplay() {
    this.setData({
      autoplay: !this.data.autoplay
    });
  },
  intervalChange(e) {
    this.setData({
      interval: e.detail.value
    });
  },
  durationChange(e) {
    this.setData({
      duration: e.detail.value
    });
  },
  toUnitList(e) {
    const {
      place,
      building
    } = getTarget(e.currentTarget, Taro).dataset;
    Taro.setStorage({
      data: {
        place,
        building
      },
      key: "queryDy"
    });
    Taro.navigateTo({
      url: `../unit_list/unit_list`
    });
  },
  onLoad() {
    this.getList();
  },
  getList() {
    Taro.request({
      url: app.globalData.host + "/api/wechat/placeFloor",
      method: "GET",
      header: {
        "Content-Type": "application/json"
      },
      data: {
        assign_batch_no: 1
      },
      success: res => {
        const {
          data,
          status
        } = res.data;
        if (status === "success") {
          this.setData({
            data: data
          });
        }
      },
      fail: function (error) {
        console.error("请求出错:", error);
      }
    });
  }
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data: {
  indicatorDots: true,
  vertical: false,
  autoplay: true,
  interval: 2000,
  duration: 500,
  circular: true,
  height: "",
  data: []
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
indicatorDots: true 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
vertical: false 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
autoplay: true 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
interval: 2000 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
duration: 500 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
circular: true 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
height: "" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data: [] 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.getSystemInfoSync() 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.setData({
  height: height
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
height: height 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.setData({
  indicatorDots: !this.data.indicatorDots
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
indicatorDots: !this.data.indicatorDots 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.setData({
  autoplay: !this.data.autoplay
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
autoplay: !this.data.autoplay 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.setData({
  interval: e.detail.value
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
interval: e.detail.value 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.setData({
  duration: e.detail.value
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
duration: e.detail.value 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
place 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
building 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
getTarget(e.currentTarget, Taro) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.setStorage({
  data: {
    place,
    building
  },
  key: "queryDy"
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data: {
  place,
  building
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
place 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
building 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
key: "queryDy" 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.navigateTo({
  url: `../unit_list/unit_list`
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
url: `../unit_list/unit_list` 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.getList() 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.request({
  url: app.globalData.host + "/api/wechat/placeFloor",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1
  },
  success: res => {
    const {
      data,
      status
    } = res.data;
    if (status === "success") {
      this.setData({
        data: data
      });
    }
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
url: app.globalData.host + "/api/wechat/placeFloor" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
method: "GET" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
header: {
  "Content-Type": "application/json"
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
"Content-Type": "application/json" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data: {
  assign_batch_no: 1
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
assign_batch_no: 1 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
success: res => {
  const {
    data,
    status
  } = res.data;
  if (status === "success") {
    this.setData({
      data: data
    });
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
status 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.setData({
  data: data
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data: data 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
fail: function (error) {
  console.error("请求出错:", error);
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] convertToOptional - 解析ClassBody 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data?.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data?.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data?.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data?.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data?.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data?.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data?.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data?.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data?.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      indicatorDots,
      autoplay,
      circular,
      interval,
      duration,
      height,
      data
    } = this.data;
    return <View className="container"><Swiper indicatorDots={indicatorDots} autoplay={autoplay} circular={circular} interval={interval} duration={duration} style={{
        height: `${height}`
      }}><Block><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner1.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem><SwiperItem><Image src="https://www.klmxf.com/m/wechat/banner/banner2.jpg" className="swiper-item" mode="widthFix" onLoad={this.goheight}></Image></SwiperItem></Block></Swiper>{data?.map((item, index) => {
        return <View className="item"><View className="title">{item.place + "地块"}</View><View className="block">{item.building.map((building, index) => {
              return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
            })}</View></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
indicatorDots 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
autoplay 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
circular 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
interval 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
duration 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
height 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
height: `${height}` 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
item.building.map((building, index) => {
  return <View className="text" onClick={this.toUnitList} data-place={item.place} data-building={building}><Text>{building}</Text></View>;
}) 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  getTarget
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  cacheOptions
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  default: withWeapp
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
// index.ts
// 获取应用实例
const app = Taro.getApp(); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
var width = Taro.getSystemInfoSync().windowWidth;
//获取可使用窗口宽度 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
//获取可使用窗口宽度
var imgheight = e.detail.height;
//获取图片实际高度 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
//获取图片实际高度
var imgwidth = e.detail.width;
//获取图片实际宽度 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
//获取图片实际宽度
var height = width * imgheight / imgwidth + "px";
//计算等比swiper高度 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  place,
  building
} = getTarget(e.currentTarget, Taro).dataset; 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  data,
  status
} = res.data; 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  indicatorDots,
  autoplay,
  circular,
  interval,
  duration,
  height,
  data
} = this.data; 
INFO [taro-cli-convertor] traverseStyle - 开始转换样式 
D:\work\Floor\mini-program\miniprogram\pages\index\index.wxss 
INFO [taro-cli-convertor] traversePages - 开始转换页面 
pages/project/project 
INFO [taro-cli-convertor] parseAst - 入参 
{"sourceFilePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\project\\project.js","outputFilePath":"D:/work/Floor/mini-program/taroConvert/src/pages/project/project.js","importStylePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\project\\project.css","depComponents":{},"imports":[],"pluginComponents":{}} 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import { Block, View, Image } from "@tarojs/components"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\project\project.js 
value: @tarojs/components 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import React from "react"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\project\project.js 
value: react 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import Taro from "@tarojs/taro"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\project\project.js 
value: @tarojs/taro 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\project\project.js 
value: @tarojs/with-weapp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Page({
  data: {
    logs: []
  },
  onLoad() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.setOptionsToCache({
  data: {
    logs: []
  },
  onLoad() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.setOptionsToCache 
INFO [taro-cli-convertor] parseAst - 解析ClassDeclaration 
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <View className="container"><View className="item"><View className="title">项目鸟瞰图</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image>{
            /*  <image class="image" src="../../img/2.jpg" mode="widthFix" />  */
          }</View></View><View className="item"><View className="title">选房周期</View><View className="block" style={{
          padding: "0.75rem 0.4rem"
        }}><View className="h5">第一轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h6">具体选房时间以《选房通知单》注明时间为准</View></View></View><View className="item"><View className="title">选房大厅地址</View><View className="block"><View className="text">选房场地为：昌平区农学院东路</View><Image className="image" src="https://www.klmxf.com/m/wechat/02.png" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/03.jpg" mode="widthFix"></Image></View></View><View className="item"><View className="title">选房大厅动向安排</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/04.jpg" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/05.png" mode="widthFix"></Image></View></View></View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.getOptionsFromCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
React.Component 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="container"><View className="item"><View className="title">项目鸟瞰图</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image>{
        /*  <image class="image" src="../../img/2.jpg" mode="widthFix" />  */
      }</View></View><View className="item"><View className="title">选房周期</View><View className="block" style={{
      padding: "0.75rem 0.4rem"
    }}><View className="h5">第一轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h6">具体选房时间以《选房通知单》注明时间为准</View></View></View><View className="item"><View className="title">选房大厅地址</View><View className="block"><View className="text">选房场地为：昌平区农学院东路</View><Image className="image" src="https://www.klmxf.com/m/wechat/02.png" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/03.jpg" mode="widthFix"></Image></View></View><View className="item"><View className="title">选房大厅动向安排</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/04.jpg" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/05.png" mode="widthFix"></Image></View></View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><View className="title">项目鸟瞰图</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image>{
      /*  <image class="image" src="../../img/2.jpg" mode="widthFix" />  */
    }</View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">项目鸟瞰图</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image>{
    /*  <image class="image" src="../../img/2.jpg" mode="widthFix" />  */
  }</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><View className="title">选房周期</View><View className="block" style={{
    padding: "0.75rem 0.4rem"
  }}><View className="h5">第一轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h6">具体选房时间以《选房通知单》注明时间为准</View></View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">选房周期</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="block" style={{
  padding: "0.75rem 0.4rem"
}}><View className="h5">第一轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h6">具体选房时间以《选房通知单》注明时间为准</View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="h5">第一轮时间：待定</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="h5">第二轮时间：待定</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="h5">第二轮时间：待定</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="h6">具体选房时间以《选房通知单》注明时间为准</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><View className="title">选房大厅地址</View><View className="block"><View className="text">选房场地为：昌平区农学院东路</View><Image className="image" src="https://www.klmxf.com/m/wechat/02.png" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/03.jpg" mode="widthFix"></Image></View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">选房大厅地址</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="block"><View className="text">选房场地为：昌平区农学院东路</View><Image className="image" src="https://www.klmxf.com/m/wechat/02.png" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/03.jpg" mode="widthFix"></Image></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="text">选房场地为：昌平区农学院东路</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/02.png" mode="widthFix"></Image> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/03.jpg" mode="widthFix"></Image> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><View className="title">选房大厅动向安排</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/04.jpg" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/05.png" mode="widthFix"></Image></View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">选房大厅动向安排</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/04.jpg" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/05.png" mode="widthFix"></Image></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/04.jpg" mode="widthFix"></Image> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/05.png" mode="widthFix"></Image> 
INFO [taro-cli-convertor] parseAst - 解析ExportDefaultDeclaration 
export default _C; 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/components" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"react" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/taro" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"container" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"block" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"block" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"0.75rem 0.4rem" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"h5" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"h5" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"h5" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"h6" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"block" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"text" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://www.klmxf.com/m/wechat/02.png" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://www.klmxf.com/m/wechat/03.jpg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"block" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://www.klmxf.com/m/wechat/04.jpg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://www.klmxf.com/m/wechat/05.png" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
cacheOptions 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
default: withWeapp 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.setOptionsToCache({
  data: {
    logs: []
  },
  onLoad() {}
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data: {
  logs: []
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
logs: [] 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] convertToOptional - 解析ClassBody 
{
  render() {
    return <View className="container"><View className="item"><View className="title">项目鸟瞰图</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image>{
            /*  <image class="image" src="../../img/2.jpg" mode="widthFix" />  */
          }</View></View><View className="item"><View className="title">选房周期</View><View className="block" style={{
          padding: "0.75rem 0.4rem"
        }}><View className="h5">第一轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h5">第二轮时间：待定</View><View className="h6">具体选房时间以《选房通知单》注明时间为准</View></View></View><View className="item"><View className="title">选房大厅地址</View><View className="block"><View className="text">选房场地为：昌平区农学院东路</View><Image className="image" src="https://www.klmxf.com/m/wechat/02.png" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/03.jpg" mode="widthFix"></Image></View></View><View className="item"><View className="title">选房大厅动向安排</View><View className="block"><Image className="image" src="https://www.klmxf.com/m/wechat/04.jpg" mode="widthFix"></Image><Image className="image" src="https://www.klmxf.com/m/wechat/05.png" mode="widthFix"></Image></View></View></View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
padding: "0.75rem 0.4rem" 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  cacheOptions
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  default: withWeapp
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] traverseStyle - 开始转换样式 
D:\work\Floor\mini-program\miniprogram\pages\project\project.wxss 
INFO [taro-cli-convertor] traversePages - 开始转换页面 
pages/info/info 
INFO [taro-cli-convertor] parseAst - 入参 
{"sourceFilePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\info\\info.js","outputFilePath":"D:/work/Floor/mini-program/taroConvert/src/pages/info/info.js","importStylePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\info\\info.css","depComponents":{},"imports":[],"pluginComponents":{}} 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import { Block, View } from "@tarojs/components"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\info\info.js 
value: @tarojs/components 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import React from "react"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\info\info.js 
value: react 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import Taro from "@tarojs/taro"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\info\info.js 
value: @tarojs/taro 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\info\info.js 
value: @tarojs/with-weapp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Page({
  data: {
    logs: []
  },
  toRoomDetail() {
    Taro.showLoading({
      title: "加载中"
    });
    Taro.downloadFile({
      url: "https://www.klmxf.com/m/pdf/xfxz.pdf",
      success: res => {
        Taro.hideLoading();
        if (res.tempFilePath) {
          Taro.openDocument({
            filePath: res.tempFilePath,
            fail: err => {
              console.error(err);
            },
            complete: () => {
              Taro.hideLoading();
            }
          });
        }
      },
      fail: err => {
        console.error(err);
        Taro.hideLoading();
      }
    });
  },
  toRoomDistribution() {
    Taro.navigateTo({
      url: '../room_distribution/room_distribution'
    });
  },
  toRoomVideo() {
    Taro.navigateTo({
      url: '../room_video/room_video'
    });
  },
  toRoomPosition() {
    Taro.navigateTo({
      url: '../room_position/room_position'
    });
  },
  toRoomType() {
    Taro.navigateTo({
      url: '../room_type/room_type'
    });
  },
  toRoomFlow() {
    Taro.navigateTo({
      url: '../room_flow/room_flow'
    });
  },
  toRoomHandbook() {
    Taro.showLoading({
      title: "加载中"
    });
    Taro.downloadFile({
      url: "https://www.klmxf.com/m/pdf/xfsc.pdf",
      success: res => {
        Taro.hideLoading();
        if (res.tempFilePath) {
          Taro.openDocument({
            filePath: res.tempFilePath,
            fail: err => {
              console.error(err);
            },
            complete: () => {
              Taro.hideLoading();
            }
          });
        }
      },
      fail: err => {
        console.error(err);
        Taro.hideLoading();
      }
    });
  },
  onLoad() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.setOptionsToCache({
  data: {
    logs: []
  },
  toRoomDetail() {
    Taro.showLoading({
      title: "加载中"
    });
    Taro.downloadFile({
      url: "https://www.klmxf.com/m/pdf/xfxz.pdf",
      success: res => {
        Taro.hideLoading();
        if (res.tempFilePath) {
          Taro.openDocument({
            filePath: res.tempFilePath,
            fail: err => {
              console.error(err);
            },
            complete: () => {
              Taro.hideLoading();
            }
          });
        }
      },
      fail: err => {
        console.error(err);
        Taro.hideLoading();
      }
    });
  },
  toRoomDistribution() {
    Taro.navigateTo({
      url: '../room_distribution/room_distribution'
    });
  },
  toRoomVideo() {
    Taro.navigateTo({
      url: '../room_video/room_video'
    });
  },
  toRoomPosition() {
    Taro.navigateTo({
      url: '../room_position/room_position'
    });
  },
  toRoomType() {
    Taro.navigateTo({
      url: '../room_type/room_type'
    });
  },
  toRoomFlow() {
    Taro.navigateTo({
      url: '../room_flow/room_flow'
    });
  },
  toRoomHandbook() {
    Taro.showLoading({
      title: "加载中"
    });
    Taro.downloadFile({
      url: "https://www.klmxf.com/m/pdf/xfsc.pdf",
      success: res => {
        Taro.hideLoading();
        if (res.tempFilePath) {
          Taro.openDocument({
            filePath: res.tempFilePath,
            fail: err => {
              console.error(err);
            },
            complete: () => {
              Taro.hideLoading();
            }
          });
        }
      },
      fail: err => {
        console.error(err);
        Taro.hideLoading();
      }
    });
  },
  onLoad() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.setOptionsToCache 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.showLoading({
  title: "加载中"
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.showLoading 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.downloadFile({
  url: "https://www.klmxf.com/m/pdf/xfxz.pdf",
  success: res => {
    Taro.hideLoading();
    if (res.tempFilePath) {
      Taro.openDocument({
        filePath: res.tempFilePath,
        fail: err => {
          console.error(err);
        },
        complete: () => {
          Taro.hideLoading();
        }
      });
    }
  },
  fail: err => {
    console.error(err);
    Taro.hideLoading();
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.downloadFile 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.hideLoading 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.tempFilePath 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.openDocument({
  filePath: res.tempFilePath,
  fail: err => {
    console.error(err);
  },
  complete: () => {
    Taro.hideLoading();
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.openDocument 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.tempFilePath 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
console.error(err) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
console.error 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.hideLoading 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
console.error(err) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
console.error 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.hideLoading 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.navigateTo({
  url: '../room_distribution/room_distribution'
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.navigateTo 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.navigateTo({
  url: '../room_video/room_video'
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.navigateTo 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.navigateTo({
  url: '../room_position/room_position'
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.navigateTo 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.navigateTo({
  url: '../room_type/room_type'
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.navigateTo 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.navigateTo({
  url: '../room_flow/room_flow'
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.navigateTo 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.showLoading({
  title: "加载中"
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.showLoading 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.downloadFile({
  url: "https://www.klmxf.com/m/pdf/xfsc.pdf",
  success: res => {
    Taro.hideLoading();
    if (res.tempFilePath) {
      Taro.openDocument({
        filePath: res.tempFilePath,
        fail: err => {
          console.error(err);
        },
        complete: () => {
          Taro.hideLoading();
        }
      });
    }
  },
  fail: err => {
    console.error(err);
    Taro.hideLoading();
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.downloadFile 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.hideLoading 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.tempFilePath 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.openDocument({
  filePath: res.tempFilePath,
  fail: err => {
    console.error(err);
  },
  complete: () => {
    Taro.hideLoading();
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.openDocument 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.tempFilePath 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
console.error(err) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
console.error 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.hideLoading 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
console.error(err) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
console.error 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.hideLoading 
INFO [taro-cli-convertor] parseAst - 解析ClassDeclaration 
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.getOptionsFromCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
React.Component 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.toRoomDetail 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">选房细则</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.toRoomDistribution 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">居室分布示意图</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.toRoomVideo 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">选房流程动画</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.toRoomPosition 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">项目鸟瞰图</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.toRoomType 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">户型信息</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.toRoomFlow 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">选房流程</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.toRoomHandbook 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">选房手册</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析ExportDefaultDeclaration 
export default _C; 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/components" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"react" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/taro" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"加载中" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://www.klmxf.com/m/pdf/xfxz.pdf" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'../room_distribution/room_distribution' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'../room_video/room_video' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'../room_position/room_position' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'../room_type/room_type' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'../room_flow/room_flow' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"加载中" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://www.klmxf.com/m/pdf/xfsc.pdf" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"container" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
cacheOptions 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
default: withWeapp 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.setOptionsToCache({
  data: {
    logs: []
  },
  toRoomDetail() {
    Taro.showLoading({
      title: "加载中"
    });
    Taro.downloadFile({
      url: "https://www.klmxf.com/m/pdf/xfxz.pdf",
      success: res => {
        Taro.hideLoading();
        if (res.tempFilePath) {
          Taro.openDocument({
            filePath: res.tempFilePath,
            fail: err => {
              console.error(err);
            },
            complete: () => {
              Taro.hideLoading();
            }
          });
        }
      },
      fail: err => {
        console.error(err);
        Taro.hideLoading();
      }
    });
  },
  toRoomDistribution() {
    Taro.navigateTo({
      url: '../room_distribution/room_distribution'
    });
  },
  toRoomVideo() {
    Taro.navigateTo({
      url: '../room_video/room_video'
    });
  },
  toRoomPosition() {
    Taro.navigateTo({
      url: '../room_position/room_position'
    });
  },
  toRoomType() {
    Taro.navigateTo({
      url: '../room_type/room_type'
    });
  },
  toRoomFlow() {
    Taro.navigateTo({
      url: '../room_flow/room_flow'
    });
  },
  toRoomHandbook() {
    Taro.showLoading({
      title: "加载中"
    });
    Taro.downloadFile({
      url: "https://www.klmxf.com/m/pdf/xfsc.pdf",
      success: res => {
        Taro.hideLoading();
        if (res.tempFilePath) {
          Taro.openDocument({
            filePath: res.tempFilePath,
            fail: err => {
              console.error(err);
            },
            complete: () => {
              Taro.hideLoading();
            }
          });
        }
      },
      fail: err => {
        console.error(err);
        Taro.hideLoading();
      }
    });
  },
  onLoad() {}
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data: {
  logs: []
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
logs: [] 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.showLoading({
  title: "加载中"
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
title: "加载中" 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.downloadFile({
  url: "https://www.klmxf.com/m/pdf/xfxz.pdf",
  success: res => {
    Taro.hideLoading();
    if (res.tempFilePath) {
      Taro.openDocument({
        filePath: res.tempFilePath,
        fail: err => {
          console.error(err);
        },
        complete: () => {
          Taro.hideLoading();
        }
      });
    }
  },
  fail: err => {
    console.error(err);
    Taro.hideLoading();
  }
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
url: "https://www.klmxf.com/m/pdf/xfxz.pdf" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
success: res => {
  Taro.hideLoading();
  if (res.tempFilePath) {
    Taro.openDocument({
      filePath: res.tempFilePath,
      fail: err => {
        console.error(err);
      },
      complete: () => {
        Taro.hideLoading();
      }
    });
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.openDocument({
  filePath: res.tempFilePath,
  fail: err => {
    console.error(err);
  },
  complete: () => {
    Taro.hideLoading();
  }
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
filePath: res.tempFilePath 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
fail: err => {
  console.error(err);
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
console.error(err) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
complete: () => {
  Taro.hideLoading();
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
fail: err => {
  console.error(err);
  Taro.hideLoading();
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
console.error(err) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.navigateTo({
  url: '../room_distribution/room_distribution'
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
url: '../room_distribution/room_distribution' 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.navigateTo({
  url: '../room_video/room_video'
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
url: '../room_video/room_video' 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.navigateTo({
  url: '../room_position/room_position'
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
url: '../room_position/room_position' 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.navigateTo({
  url: '../room_type/room_type'
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
url: '../room_type/room_type' 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.navigateTo({
  url: '../room_flow/room_flow'
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
url: '../room_flow/room_flow' 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.showLoading({
  title: "加载中"
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
title: "加载中" 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.downloadFile({
  url: "https://www.klmxf.com/m/pdf/xfsc.pdf",
  success: res => {
    Taro.hideLoading();
    if (res.tempFilePath) {
      Taro.openDocument({
        filePath: res.tempFilePath,
        fail: err => {
          console.error(err);
        },
        complete: () => {
          Taro.hideLoading();
        }
      });
    }
  },
  fail: err => {
    console.error(err);
    Taro.hideLoading();
  }
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
url: "https://www.klmxf.com/m/pdf/xfsc.pdf" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
success: res => {
  Taro.hideLoading();
  if (res.tempFilePath) {
    Taro.openDocument({
      filePath: res.tempFilePath,
      fail: err => {
        console.error(err);
      },
      complete: () => {
        Taro.hideLoading();
      }
    });
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.openDocument({
  filePath: res.tempFilePath,
  fail: err => {
    console.error(err);
  },
  complete: () => {
    Taro.hideLoading();
  }
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
filePath: res.tempFilePath 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
fail: err => {
  console.error(err);
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
console.error(err) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
complete: () => {
  Taro.hideLoading();
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
fail: err => {
  console.error(err);
  Taro.hideLoading();
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
console.error(err) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] convertToOptional - 解析ClassBody 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item" onClick={this.toRoomDetail}><View className="label">选房细则</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomDistribution}><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomVideo}><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomPosition}><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomType}><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomFlow}><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><View className="item" onClick={this.toRoomHandbook}><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View></View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  cacheOptions
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  default: withWeapp
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] traverseStyle - 开始转换样式 
D:\work\Floor\mini-program\miniprogram\pages\info\info.wxss 
INFO [taro-cli-convertor] traversePages - 开始转换页面 
pages/room_distribution/room_distribution 
INFO [taro-cli-convertor] parseAst - 入参 
{"sourceFilePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_distribution\\room_distribution.js","outputFilePath":"D:/work/Floor/mini-program/taroConvert/src/pages/room_distribution/room_distribution.js","importStylePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_distribution\\room_distribution.css","depComponents":{},"imports":[],"pluginComponents":{}} 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import { Block, View, Image } from "@tarojs/components"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_distribution\room_distribution.js 
value: @tarojs/components 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import React from "react"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_distribution\room_distribution.js 
value: react 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import Taro from "@tarojs/taro"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_distribution\room_distribution.js 
value: @tarojs/taro 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_distribution\room_distribution.js 
value: @tarojs/with-weapp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.setOptionsToCache 
INFO [taro-cli-convertor] parseAst - 解析ClassDeclaration 
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_distribution/1.png" mode="widthFix"></Image></View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.getOptionsFromCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
React.Component 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_distribution/1.png" mode="widthFix"></Image></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">居室分布示意图</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src="../../img/room_distribution/1.png" mode="widthFix"></Image> 
INFO [taro-cli-convertor] parseAst - 解析ExportDefaultDeclaration 
export default _C; 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/components" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"react" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/taro" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"container" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"../../img/room_distribution/1.png" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"../../img/room_distribution/1.png" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
cacheOptions 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
default: withWeapp 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
/**
 * 页面的初始数据
 */
data: {} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] convertToOptional - 解析ClassBody 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src={require("../../img/room_distribution/1.png")} mode="widthFix"></Image></View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("../../img/room_distribution/1.png") 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  cacheOptions
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  default: withWeapp
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] traverseStyle - 开始转换样式 
D:\work\Floor\mini-program\miniprogram\pages\room_distribution\room_distribution.wxss 
INFO [taro-cli-convertor] traversePages - 开始转换页面 
pages/room_video/room_video 
INFO [taro-cli-convertor] parseAst - 入参 
{"sourceFilePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_video\\room_video.js","outputFilePath":"D:/work/Floor/mini-program/taroConvert/src/pages/room_video/room_video.js","importStylePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_video\\room_video.css","depComponents":{},"imports":[],"pluginComponents":{}} 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import { Block, View, Video } from "@tarojs/components"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_video\room_video.js 
value: @tarojs/components 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import React from "react"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_video\room_video.js 
value: react 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import Taro from "@tarojs/taro"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_video\room_video.js 
value: @tarojs/taro 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_video\room_video.js 
value: @tarojs/with-weapp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.setOptionsToCache 
INFO [taro-cli-convertor] parseAst - 解析ClassDeclaration 
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><Video src="https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" poster="http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg"></Video></View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.getOptionsFromCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
React.Component 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><Video src="https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" poster="http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg"></Video></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">选房流程动画</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Video src="https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" poster="http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg"></Video> 
INFO [taro-cli-convertor] parseAst - 解析ExportDefaultDeclaration 
export default _C; 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/components" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"react" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/taro" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"container" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
cacheOptions 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
default: withWeapp 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
/**
 * 页面的初始数据
 */
data: {} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] convertToOptional - 解析ClassBody 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><Video src="https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" poster="http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg"></Video></View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  cacheOptions
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  default: withWeapp
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] traverseStyle - 开始转换样式 
D:\work\Floor\mini-program\miniprogram\pages\room_video\room_video.wxss 
INFO [taro-cli-convertor] traversePages - 开始转换页面 
pages/room_position/room_position 
INFO [taro-cli-convertor] parseAst - 入参 
{"sourceFilePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_position\\room_position.js","outputFilePath":"D:/work/Floor/mini-program/taroConvert/src/pages/room_position/room_position.js","importStylePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_position\\room_position.css","depComponents":{},"imports":[],"pluginComponents":{}} 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import { Block, View, Image } from "@tarojs/components"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_position\room_position.js 
value: @tarojs/components 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import React from "react"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_position\room_position.js 
value: react 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import Taro from "@tarojs/taro"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_position\room_position.js 
value: @tarojs/taro 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_position\room_position.js 
value: @tarojs/with-weapp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.setOptionsToCache 
INFO [taro-cli-convertor] parseAst - 解析ClassDeclaration 
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image></View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.getOptionsFromCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
React.Component 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">项目鸟瞰图</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image> 
INFO [taro-cli-convertor] parseAst - 解析ExportDefaultDeclaration 
export default _C; 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/components" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"react" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/taro" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"container" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"https://www.klmxf.com/m/wechat/01.jpg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
cacheOptions 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
default: withWeapp 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
/**
 * 页面的初始数据
 */
data: {} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] convertToOptional - 解析ClassBody 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">项目鸟瞰图</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="https://www.klmxf.com/m/wechat/01.jpg" mode="widthFix"></Image></View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  cacheOptions
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  default: withWeapp
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] traverseStyle - 开始转换样式 
D:\work\Floor\mini-program\miniprogram\pages\room_position\room_position.wxss 
INFO [taro-cli-convertor] traversePages - 开始转换页面 
pages/room_type/room_type 
INFO [taro-cli-convertor] parseAst - 入参 
{"sourceFilePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_type\\room_type.js","outputFilePath":"D:/work/Floor/mini-program/taroConvert/src/pages/room_type/room_type.js","importStylePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_type\\room_type.css","depComponents":{},"imports":[],"pluginComponents":{}} 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import { Block, View, Image } from "@tarojs/components"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_type\room_type.js 
value: @tarojs/components 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import React from "react"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_type\room_type.js 
value: react 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import Taro from "@tarojs/taro"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_type\room_type.js 
value: @tarojs/taro 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_type\room_type.js 
value: @tarojs/with-weapp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {
    imgList: ['https://www.klmxf.com/m/wechat/js/1.jpg', 'https://www.klmxf.com/m/wechat/js/2.jpg', 'https://www.klmxf.com/m/wechat/js/3.jpg', 'https://www.klmxf.com/m/wechat/js/4.jpg', 'https://www.klmxf.com/m/wechat/js/5.jpg', 'https://www.klmxf.com/m/wechat/js/6.jpg', 'https://www.klmxf.com/m/wechat/js/7.jpg', 'https://www.klmxf.com/m/wechat/js/8.jpg', 'https://www.klmxf.com/m/wechat/js/9.jpg', 'https://www.klmxf.com/m/wechat/js/10.jpg', 'https://www.klmxf.com/m/wechat/js/11.jpg', 'https://www.klmxf.com/m/wechat/js/12.jpg', 'https://www.klmxf.com/m/wechat/js/13.jpg', 'https://www.klmxf.com/m/wechat/js/14.jpg', 'https://www.klmxf.com/m/wechat/js/15.jpg', 'https://www.klmxf.com/m/wechat/js/16.jpg', 'https://www.klmxf.com/m/wechat/js/17.jpg'
    // 'https://www.klmxf.com/m/wechat/js/18.jpg',  
    ]
  },
  imgPreview: function (event) {
    var src = event.currentTarget.dataset.src;
    var imgList = event.currentTarget.dataset.list;
    Taro.previewImage({
      current: src,
      urls: imgList
    });
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {
    imgList: ['https://www.klmxf.com/m/wechat/js/1.jpg', 'https://www.klmxf.com/m/wechat/js/2.jpg', 'https://www.klmxf.com/m/wechat/js/3.jpg', 'https://www.klmxf.com/m/wechat/js/4.jpg', 'https://www.klmxf.com/m/wechat/js/5.jpg', 'https://www.klmxf.com/m/wechat/js/6.jpg', 'https://www.klmxf.com/m/wechat/js/7.jpg', 'https://www.klmxf.com/m/wechat/js/8.jpg', 'https://www.klmxf.com/m/wechat/js/9.jpg', 'https://www.klmxf.com/m/wechat/js/10.jpg', 'https://www.klmxf.com/m/wechat/js/11.jpg', 'https://www.klmxf.com/m/wechat/js/12.jpg', 'https://www.klmxf.com/m/wechat/js/13.jpg', 'https://www.klmxf.com/m/wechat/js/14.jpg', 'https://www.klmxf.com/m/wechat/js/15.jpg', 'https://www.klmxf.com/m/wechat/js/16.jpg', 'https://www.klmxf.com/m/wechat/js/17.jpg'
    // 'https://www.klmxf.com/m/wechat/js/18.jpg',  
    ]
  },
  imgPreview: function (event) {
    var src = event.currentTarget.dataset.src;
    var imgList = event.currentTarget.dataset.list;
    Taro.previewImage({
      current: src,
      urls: imgList
    });
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.setOptionsToCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
event.currentTarget.dataset.src 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
event.currentTarget.dataset 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
getTarget(event.currentTarget, Taro) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
event.currentTarget 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
event.currentTarget.dataset.list 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
event.currentTarget.dataset 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
getTarget(event.currentTarget, Taro) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
event.currentTarget 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.previewImage({
  current: src,
  urls: imgList
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.previewImage 
INFO [taro-cli-convertor] parseAst - 解析ClassDeclaration 
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    const {
      imgList
    } = this.data;
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View>{imgList.map((item, index) => {
        return <View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
            marginTop: "0.6rem"
          }}></Image></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.getOptionsFromCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
React.Component 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.data 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View>{imgList.map((item, index) => {
    return <View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
        marginTop: "0.6rem"
      }}></Image></View>;
  })}</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">户型信息</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
imgList.map((item, index) => {
  return <View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
      marginTop: "0.6rem"
    }}></Image></View>;
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
imgList.map 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
    marginTop: "0.6rem"
  }}></Image></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
  marginTop: "0.6rem"
}}></Image> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.imgPreview 
INFO [taro-cli-convertor] parseAst - 解析ExportDefaultDeclaration 
export default _C; 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/components" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"react" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/taro" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/1.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/2.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/3.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/4.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/5.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/6.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/7.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/8.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/9.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/10.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/11.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/12.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/13.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/14.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/15.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/16.jpg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'https://www.klmxf.com/m/wechat/js/17.jpg'
// 'https://www.klmxf.com/m/wechat/js/18.jpg', 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"container" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"imgs" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"0.6rem" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
getTarget 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
cacheOptions 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
default: withWeapp 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {
    imgList: ['https://www.klmxf.com/m/wechat/js/1.jpg', 'https://www.klmxf.com/m/wechat/js/2.jpg', 'https://www.klmxf.com/m/wechat/js/3.jpg', 'https://www.klmxf.com/m/wechat/js/4.jpg', 'https://www.klmxf.com/m/wechat/js/5.jpg', 'https://www.klmxf.com/m/wechat/js/6.jpg', 'https://www.klmxf.com/m/wechat/js/7.jpg', 'https://www.klmxf.com/m/wechat/js/8.jpg', 'https://www.klmxf.com/m/wechat/js/9.jpg', 'https://www.klmxf.com/m/wechat/js/10.jpg', 'https://www.klmxf.com/m/wechat/js/11.jpg', 'https://www.klmxf.com/m/wechat/js/12.jpg', 'https://www.klmxf.com/m/wechat/js/13.jpg', 'https://www.klmxf.com/m/wechat/js/14.jpg', 'https://www.klmxf.com/m/wechat/js/15.jpg', 'https://www.klmxf.com/m/wechat/js/16.jpg', 'https://www.klmxf.com/m/wechat/js/17.jpg'
    // 'https://www.klmxf.com/m/wechat/js/18.jpg',  
    ]
  },
  imgPreview: function (event) {
    var src = getTarget(event.currentTarget, Taro).dataset.src;
    var imgList = getTarget(event.currentTarget, Taro).dataset.list;
    Taro.previewImage({
      current: src,
      urls: imgList
    });
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
/**
 * 页面的初始数据
 */
data: {
  imgList: ['https://www.klmxf.com/m/wechat/js/1.jpg', 'https://www.klmxf.com/m/wechat/js/2.jpg', 'https://www.klmxf.com/m/wechat/js/3.jpg', 'https://www.klmxf.com/m/wechat/js/4.jpg', 'https://www.klmxf.com/m/wechat/js/5.jpg', 'https://www.klmxf.com/m/wechat/js/6.jpg', 'https://www.klmxf.com/m/wechat/js/7.jpg', 'https://www.klmxf.com/m/wechat/js/8.jpg', 'https://www.klmxf.com/m/wechat/js/9.jpg', 'https://www.klmxf.com/m/wechat/js/10.jpg', 'https://www.klmxf.com/m/wechat/js/11.jpg', 'https://www.klmxf.com/m/wechat/js/12.jpg', 'https://www.klmxf.com/m/wechat/js/13.jpg', 'https://www.klmxf.com/m/wechat/js/14.jpg', 'https://www.klmxf.com/m/wechat/js/15.jpg', 'https://www.klmxf.com/m/wechat/js/16.jpg', 'https://www.klmxf.com/m/wechat/js/17.jpg'
  // 'https://www.klmxf.com/m/wechat/js/18.jpg',  
  ]
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
imgList: ['https://www.klmxf.com/m/wechat/js/1.jpg', 'https://www.klmxf.com/m/wechat/js/2.jpg', 'https://www.klmxf.com/m/wechat/js/3.jpg', 'https://www.klmxf.com/m/wechat/js/4.jpg', 'https://www.klmxf.com/m/wechat/js/5.jpg', 'https://www.klmxf.com/m/wechat/js/6.jpg', 'https://www.klmxf.com/m/wechat/js/7.jpg', 'https://www.klmxf.com/m/wechat/js/8.jpg', 'https://www.klmxf.com/m/wechat/js/9.jpg', 'https://www.klmxf.com/m/wechat/js/10.jpg', 'https://www.klmxf.com/m/wechat/js/11.jpg', 'https://www.klmxf.com/m/wechat/js/12.jpg', 'https://www.klmxf.com/m/wechat/js/13.jpg', 'https://www.klmxf.com/m/wechat/js/14.jpg', 'https://www.klmxf.com/m/wechat/js/15.jpg', 'https://www.klmxf.com/m/wechat/js/16.jpg', 'https://www.klmxf.com/m/wechat/js/17.jpg'
// 'https://www.klmxf.com/m/wechat/js/18.jpg',  
] 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
imgPreview: function (event) {
  var src = getTarget(event.currentTarget, Taro).dataset.src;
  var imgList = getTarget(event.currentTarget, Taro).dataset.list;
  Taro.previewImage({
    current: src,
    urls: imgList
  });
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
getTarget(event.currentTarget, Taro) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
getTarget(event.currentTarget, Taro) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.previewImage({
  current: src,
  urls: imgList
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
current: src 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
urls: imgList 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] convertToOptional - 解析ClassBody 
{
  render() {
    const {
      imgList
    } = this.data;
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View>{imgList.map((item, index) => {
        return <View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
            marginTop: "0.6rem"
          }}></Image></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      imgList
    } = this.data;
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View>{imgList.map((item, index) => {
        return <View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
            marginTop: "0.6rem"
          }}></Image></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      imgList
    } = this.data;
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View>{imgList.map((item, index) => {
        return <View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
            marginTop: "0.6rem"
          }}></Image></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      imgList
    } = this.data;
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">户型信息</View><View className="date">2023/09/08 23:16:59</View></View>{imgList.map((item, index) => {
        return <View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
            marginTop: "0.6rem"
          }}></Image></View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
imgList 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
imgList.map((item, index) => {
  return <View><Image className="image" wx:key="imgs" src={item} data-src={item} mode="widthFix" data-list={imgList} onClick={this.imgPreview} style={{
      marginTop: "0.6rem"
    }}></Image></View>;
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
marginTop: "0.6rem" 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  getTarget
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  cacheOptions
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  default: withWeapp
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
var src = getTarget(event.currentTarget, Taro).dataset.src; 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
var imgList = getTarget(event.currentTarget, Taro).dataset.list; 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  imgList
} = this.data; 
INFO [taro-cli-convertor] traverseStyle - 开始转换样式 
D:\work\Floor\mini-program\miniprogram\pages\room_type\room_type.wxss 
INFO [taro-cli-convertor] traversePages - 开始转换页面 
pages/room_flow/room_flow 
INFO [taro-cli-convertor] parseAst - 入参 
{"sourceFilePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_flow\\room_flow.js","outputFilePath":"D:/work/Floor/mini-program/taroConvert/src/pages/room_flow/room_flow.js","importStylePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_flow\\room_flow.css","depComponents":{},"imports":[],"pluginComponents":{}} 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import { Block, View, Image } from "@tarojs/components"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_flow\room_flow.js 
value: @tarojs/components 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import React from "react"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_flow\room_flow.js 
value: react 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import Taro from "@tarojs/taro"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_flow\room_flow.js 
value: @tarojs/taro 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_flow\room_flow.js 
value: @tarojs/with-weapp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.setOptionsToCache 
INFO [taro-cli-convertor] parseAst - 解析ClassDeclaration 
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_flow/1.png" mode="widthFix"></Image></View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.getOptionsFromCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
React.Component 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_flow/1.png" mode="widthFix"></Image></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">选房流程</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src="../../img/room_flow/1.png" mode="widthFix"></Image> 
INFO [taro-cli-convertor] parseAst - 解析ExportDefaultDeclaration 
export default _C; 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/components" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"react" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/taro" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"container" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"../../img/room_flow/1.png" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"../../img/room_flow/1.png" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
cacheOptions 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
default: withWeapp 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
/**
 * 页面的初始数据
 */
data: {} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] convertToOptional - 解析ClassBody 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房流程</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src={require("../../img/room_flow/1.png")} mode="widthFix"></Image></View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("../../img/room_flow/1.png") 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  cacheOptions
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  default: withWeapp
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] traverseStyle - 开始转换样式 
D:\work\Floor\mini-program\miniprogram\pages\room_flow\room_flow.wxss 
INFO [taro-cli-convertor] traversePages - 开始转换页面 
pages/room_handbook/room_handbook 
INFO [taro-cli-convertor] parseAst - 入参 
{"sourceFilePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_handbook\\room_handbook.js","outputFilePath":"D:/work/Floor/mini-program/taroConvert/src/pages/room_handbook/room_handbook.js","importStylePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_handbook\\room_handbook.css","depComponents":{},"imports":[],"pluginComponents":{}} 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import { Block, View, Image } from "@tarojs/components"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_handbook\room_handbook.js 
value: @tarojs/components 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import React from "react"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_handbook\room_handbook.js 
value: react 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import Taro from "@tarojs/taro"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_handbook\room_handbook.js 
value: @tarojs/taro 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\room_handbook\room_handbook.js 
value: @tarojs/with-weapp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.setOptionsToCache 
INFO [taro-cli-convertor] parseAst - 解析ClassDeclaration 
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_handbook/1.jpg" mode="widthFix"></Image></View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.getOptionsFromCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
React.Component 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_handbook/1.jpg" mode="widthFix"></Image></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="label">选房手册</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src="../../img/room_handbook/1.jpg" mode="widthFix"></Image> 
INFO [taro-cli-convertor] parseAst - 解析ExportDefaultDeclaration 
export default _C; 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/components" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"react" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/taro" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"container" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"title" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"label" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"date" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"../../img/room_handbook/1.jpg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"../../img/room_handbook/1.jpg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"widthFix" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
cacheOptions 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
default: withWeapp 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
/**
 * 页面的初始数据
 */
data: {} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] convertToOptional - 解析ClassBody 
{
  render() {
    return <View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房手册</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src={require("../../img/room_handbook/1.jpg")} mode="widthFix"></Image></View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("../../img/room_handbook/1.jpg") 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  cacheOptions
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  default: withWeapp
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] traverseStyle - 开始转换样式 
D:\work\Floor\mini-program\miniprogram\pages\room_handbook\room_handbook.wxss 
INFO [taro-cli-convertor] traversePages - 开始转换页面 
pages/unit_list/unit_list 
INFO [taro-cli-convertor] parseAst - 入参 
{"sourceFilePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\unit_list\\unit_list.js","outputFilePath":"D:/work/Floor/mini-program/taroConvert/src/pages/unit_list/unit_list.js","importStylePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\unit_list\\unit_list.css","depComponents":{},"imports":[],"pluginComponents":{}} 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import { Block, View, Image, Text } from "@tarojs/components"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\unit_list\unit_list.js 
value: @tarojs/components 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import React from "react"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\unit_list\unit_list.js 
value: react 
INFO [taro-cli-convertor] parseAst - 解析ImportDeclaration 
import Taro from "@tarojs/taro"; 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\unit_list\unit_list.js 
value: @tarojs/taro 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] analyzeImportUrl - 入参 
sourceFilePath: D:\work\Floor\mini-program\miniprogram\pages\unit_list\unit_list.js 
value: @tarojs/with-weapp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.getApp() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.getApp 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {
    place: "",
    building: "",
    active: "",
    units: ["一单元", "三单元", "二单元"],
    data: []
  },
  getTabList() {
    Taro.getStorage({
      key: "queryDy"
    }).then(res => {
      const {
        place,
        building
      } = res.data;
      Taro.request({
        url: app.globalData.host + "/api/wechat/queryDy",
        method: "GET",
        header: {
          "Content-Type": "application/json"
        },
        data: {
          assign_batch_no: 1,
          place,
          building
        },
        success: res => {
          this.setData({
            units: res.data.data,
            active: res.data.data[0]
          });
          this.getList(res.data.data[0]);
        },
        fail: function (error) {
          console.error("请求出错:", error);
        }
      });
    });
  },
  init() {
    Taro.getStorage({
      key: "queryDy"
    }).then(res => {
      const {
        place,
        building
      } = res.data;
      this.setData({
        place,
        building
      });
    });
  },
  tabClick(e) {
    const {
      active
    } = e.currentTarget.dataset;
    this.setData({
      active
    });
    this.getList(active);
  },
  getList(danYuan) {
    Taro.showLoading({
      title: "加载中"
    });
    Taro.request({
      url: app.globalData.host + "/api/wechat/queryRoom",
      method: "GET",
      header: {
        "Content-Type": "application/json"
      },
      data: {
        assign_batch_no: 1,
        place: this.data.place,
        building: this.data.building,
        danYuan
      },
      success: res => {
        this.setData({
          data: res.data.data
        });
        Taro.hideLoading();
      },
      fail: function (error) {
        console.error("请求出错:", error);
      }
    });
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {
    this.init();
    this.getTabList();
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {
    place: "",
    building: "",
    active: "",
    units: ["一单元", "三单元", "二单元"],
    data: []
  },
  getTabList() {
    Taro.getStorage({
      key: "queryDy"
    }).then(res => {
      const {
        place,
        building
      } = res.data;
      Taro.request({
        url: app.globalData.host + "/api/wechat/queryDy",
        method: "GET",
        header: {
          "Content-Type": "application/json"
        },
        data: {
          assign_batch_no: 1,
          place,
          building
        },
        success: res => {
          this.setData({
            units: res.data.data,
            active: res.data.data[0]
          });
          this.getList(res.data.data[0]);
        },
        fail: function (error) {
          console.error("请求出错:", error);
        }
      });
    });
  },
  init() {
    Taro.getStorage({
      key: "queryDy"
    }).then(res => {
      const {
        place,
        building
      } = res.data;
      this.setData({
        place,
        building
      });
    });
  },
  tabClick(e) {
    const {
      active
    } = e.currentTarget.dataset;
    this.setData({
      active
    });
    this.getList(active);
  },
  getList(danYuan) {
    Taro.showLoading({
      title: "加载中"
    });
    Taro.request({
      url: app.globalData.host + "/api/wechat/queryRoom",
      method: "GET",
      header: {
        "Content-Type": "application/json"
      },
      data: {
        assign_batch_no: 1,
        place: this.data.place,
        building: this.data.building,
        danYuan
      },
      success: res => {
        this.setData({
          data: res.data.data
        });
        Taro.hideLoading();
      },
      fail: function (error) {
        console.error("请求出错:", error);
      }
    });
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {
    this.init();
    this.getTabList();
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.setOptionsToCache 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}).then(res => {
  const {
    place,
    building
  } = res.data;
  Taro.request({
    url: app.globalData.host + "/api/wechat/queryDy",
    method: "GET",
    header: {
      "Content-Type": "application/json"
    },
    data: {
      assign_batch_no: 1,
      place,
      building
    },
    success: res => {
      this.setData({
        units: res.data.data,
        active: res.data.data[0]
      });
      this.getList(res.data.data[0]);
    },
    fail: function (error) {
      console.error("请求出错:", error);
    }
  });
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.getStorage({
  key: "queryDy"
}).then 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.getStorage 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.request({
  url: app.globalData.host + "/api/wechat/queryDy",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1,
    place,
    building
  },
  success: res => {
    this.setData({
      units: res.data.data,
      active: res.data.data[0]
    });
    this.getList(res.data.data[0]);
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.request 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
app.globalData.host 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
app.globalData 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.setData({
  units: res.data.data,
  active: res.data.data[0]
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.setData 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data.data 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data.data[0] 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data.data 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.getList(res.data.data[0]) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.getList 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data.data[0] 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data.data 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
console.error 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}).then(res => {
  const {
    place,
    building
  } = res.data;
  this.setData({
    place,
    building
  });
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.getStorage({
  key: "queryDy"
}).then 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.getStorage 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.setData({
  place,
  building
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.setData 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.currentTarget.dataset 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
getTarget(e.currentTarget, Taro) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
e.currentTarget 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.setData({
  active
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.setData 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.getList(active) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.getList 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.showLoading({
  title: "加载中"
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.showLoading 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.request({
  url: app.globalData.host + "/api/wechat/queryRoom",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1,
    place: this.data.place,
    building: this.data.building,
    danYuan
  },
  success: res => {
    this.setData({
      data: res.data.data
    });
    Taro.hideLoading();
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.request 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
app.globalData.host 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
app.globalData 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.data.place 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.data 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.data.building 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.data 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.setData({
  data: res.data.data
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.setData 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data.data 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
res.data 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
Taro.hideLoading 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
console.error 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.init() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.init 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
this.getTabList() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.getTabList 
INFO [taro-cli-convertor] parseAst - 解析ClassDeclaration 
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src="../../img/checkbox.svg"></Image><Text>可选</Text></View><View className="item"><Image className="image" src="../../img/checkbox_active.svg"></Image><Text>已选</Text></View></View></View>{data.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
cacheOptions.getOptionsFromCache 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
React.Component 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.data 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="container"><View className="tabs">{units.map((unit, index) => {
      return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
    })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src="../../img/checkbox.svg"></Image><Text>可选</Text></View><View className="item"><Image className="image" src="../../img/checkbox_active.svg"></Image><Text>已选</Text></View></View></View>{data.map((item, index) => {
    return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
        return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
      })}</View>;
  })}</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="tabs">{units.map((unit, index) => {
    return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
  })}</View> 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
units.map((unit, index) => {
  return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
units.map 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
this.tabClick 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src="../../img/checkbox.svg"></Image><Text>可选</Text></View><View className="item"><Image className="image" src="../../img/checkbox_active.svg"></Image><Text>已选</Text></View></View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="left">{place + " - " + building}</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="status_info"><View className="item"><Image className="image" src="../../img/checkbox.svg"></Image><Text>可选</Text></View><View className="item"><Image className="image" src="../../img/checkbox_active.svg"></Image><Text>已选</Text></View></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><Image className="image" src="../../img/checkbox.svg"></Image><Text>可选</Text></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src="../../img/checkbox.svg"></Image> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Text>可选</Text> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="item"><Image className="image" src="../../img/checkbox_active.svg"></Image><Text>已选</Text></View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src="../../img/checkbox_active.svg"></Image> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Text>已选</Text> 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
data.map((item, index) => {
  return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
      return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
    })}</View>;
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
data.map 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
    return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
  })}</View> 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="room_floor">{item.room_floor}</View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
item.room_floor 
INFO [taro-cli-convertor] parseAst - 解析CallExpression 
item.room.map((item, index) => {
  return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
}) 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
item.room.map 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
item.room 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
item.selected 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
item.selected 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="text">{item.room_number}</View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
item.room_number 
INFO [taro-cli-convertor] parseAst - 解析JSXElement 
<View className="status">{item.selected === 0 ? "未选" : "已选"}</View> 
INFO [taro-cli-convertor] parseAst - 解析MemberExpression 
item.selected 
INFO [taro-cli-convertor] parseAst - 解析ExportDefaultDeclaration 
export default _C; 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/components" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"react" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/taro" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"@tarojs/with-weapp" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"一单元" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"三单元" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"二单元" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"queryDy" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"/api/wechat/queryDy" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"GET" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"Content-Type" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"application/json" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"请求出错:" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"queryDy" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"加载中" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"/api/wechat/queryRoom" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"GET" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"Content-Type" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"application/json" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"请求出错:" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"container" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"tabs" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"tab " 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'active' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"head" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"left" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
" - " 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"status_info" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"../../img/checkbox.svg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"../../img/checkbox.svg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"item" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"../../img/checkbox_active.svg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"../../img/checkbox_active.svg" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"floor_info" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"room_floor" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"house " 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'unselect' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"image" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'../../img/checkbox.svg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
'../../img/checkbox_white.svg' 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"text" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"status" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"未选" 
INFO [taro-cli-convertor] parseAst - 解析StringLiteral 
"已选" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
getTarget 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
cacheOptions 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
default: withWeapp 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("@tarojs/with-weapp") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.getApp() 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.setOptionsToCache({
  /**
   * 页面的初始数据
   */
  data: {
    place: "",
    building: "",
    active: "",
    units: ["一单元", "三单元", "二单元"],
    data: []
  },
  getTabList() {
    Taro.getStorage({
      key: "queryDy"
    }).then(res => {
      const {
        place,
        building
      } = res.data;
      Taro.request({
        url: app.globalData.host + "/api/wechat/queryDy",
        method: "GET",
        header: {
          "Content-Type": "application/json"
        },
        data: {
          assign_batch_no: 1,
          place,
          building
        },
        success: res => {
          this.setData({
            units: res.data.data,
            active: res.data.data[0]
          });
          this.getList(res.data.data[0]);
        },
        fail: function (error) {
          console.error("请求出错:", error);
        }
      });
    });
  },
  init() {
    Taro.getStorage({
      key: "queryDy"
    }).then(res => {
      const {
        place,
        building
      } = res.data;
      this.setData({
        place,
        building
      });
    });
  },
  tabClick(e) {
    const {
      active
    } = getTarget(e.currentTarget, Taro).dataset;
    this.setData({
      active
    });
    this.getList(active);
  },
  getList(danYuan) {
    Taro.showLoading({
      title: "加载中"
    });
    Taro.request({
      url: app.globalData.host + "/api/wechat/queryRoom",
      method: "GET",
      header: {
        "Content-Type": "application/json"
      },
      data: {
        assign_batch_no: 1,
        place: this.data.place,
        building: this.data.building,
        danYuan
      },
      success: res => {
        this.setData({
          data: res.data.data
        });
        Taro.hideLoading();
      },
      fail: function (error) {
        console.error("请求出错:", error);
      }
    });
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {
    this.init();
    this.getTabList();
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
/**
 * 页面的初始数据
 */
data: {
  place: "",
  building: "",
  active: "",
  units: ["一单元", "三单元", "二单元"],
  data: []
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
place: "" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
building: "" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
active: "" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
units: ["一单元", "三单元", "二单元"] 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data: [] 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}).then(res => {
  const {
    place,
    building
  } = res.data;
  Taro.request({
    url: app.globalData.host + "/api/wechat/queryDy",
    method: "GET",
    header: {
      "Content-Type": "application/json"
    },
    data: {
      assign_batch_no: 1,
      place,
      building
    },
    success: res => {
      this.setData({
        units: res.data.data,
        active: res.data.data[0]
      });
      this.getList(res.data.data[0]);
    },
    fail: function (error) {
      console.error("请求出错:", error);
    }
  });
}) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
key: "queryDy" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
place 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
building 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.request({
  url: app.globalData.host + "/api/wechat/queryDy",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1,
    place,
    building
  },
  success: res => {
    this.setData({
      units: res.data.data,
      active: res.data.data[0]
    });
    this.getList(res.data.data[0]);
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
url: app.globalData.host + "/api/wechat/queryDy" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
method: "GET" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
header: {
  "Content-Type": "application/json"
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
"Content-Type": "application/json" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data: {
  assign_batch_no: 1,
  place,
  building
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
assign_batch_no: 1 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
place 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
building 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
success: res => {
  this.setData({
    units: res.data.data,
    active: res.data.data[0]
  });
  this.getList(res.data.data[0]);
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.setData({
  units: res.data.data,
  active: res.data.data[0]
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
units: res.data.data 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
active: res.data.data[0] 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.getList(res.data.data[0]) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
fail: function (error) {
  console.error("请求出错:", error);
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}).then(res => {
  const {
    place,
    building
  } = res.data;
  this.setData({
    place,
    building
  });
}) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.getStorage({
  key: "queryDy"
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
key: "queryDy" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
place 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
building 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.setData({
  place,
  building
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
place 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
building 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
active 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
getTarget(e.currentTarget, Taro) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.setData({
  active
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
active 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.getList(active) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.showLoading({
  title: "加载中"
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
title: "加载中" 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.request({
  url: app.globalData.host + "/api/wechat/queryRoom",
  method: "GET",
  header: {
    "Content-Type": "application/json"
  },
  data: {
    assign_batch_no: 1,
    place: this.data.place,
    building: this.data.building,
    danYuan
  },
  success: res => {
    this.setData({
      data: res.data.data
    });
    Taro.hideLoading();
  },
  fail: function (error) {
    console.error("请求出错:", error);
  }
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
url: app.globalData.host + "/api/wechat/queryRoom" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
method: "GET" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
header: {
  "Content-Type": "application/json"
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
"Content-Type": "application/json" 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data: {
  assign_batch_no: 1,
  place: this.data.place,
  building: this.data.building,
  danYuan
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
assign_batch_no: 1 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
place: this.data.place 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
building: this.data.building 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
danYuan 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
success: res => {
  this.setData({
    data: res.data.data
  });
  Taro.hideLoading();
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.setData({
  data: res.data.data
}) 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data: res.data.data 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
Taro.hideLoading() 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
fail: function (error) {
  console.error("请求出错:", error);
} 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
console.error("请求出错:", error) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.init() 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
this.getTabList() 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
withWeapp(cacheOptions.getOptionsFromCache()) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
cacheOptions.getOptionsFromCache() 
INFO [taro-cli-convertor] convertToOptional - 解析ClassBody 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析MemberExpression 
{
  render() {
    const {
      units,
      active,
      place,
      building,
      data
    } = this.data;
    return <View className="container"><View className="tabs">{units.map((unit, index) => {
          return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
        })}</View><View className="head"><View className="left">{place + " - " + building}</View><View className="status_info"><View className="item"><Image className="image" src={require("../../img/checkbox.svg")}></Image><Text>可选</Text></View><View className="item"><Image className="image" src={require("../../img/checkbox_active.svg")}></Image><Text>已选</Text></View></View></View>{data?.map((item, index) => {
        return <View className="floor_info"><View className="room_floor">{item.room_floor}</View>{item.room.map((item, index) => {
            return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
          })}</View>;
      })}</View>;
  }
} 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
units 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
active 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
place 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
building 
INFO [taro-cli-convertor] convertToOptional - 解析ObjectProperty 
data 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
units.map((unit, index) => {
  return <View onClick={this.tabClick} data-active={unit} className={"tab " + (active === unit ? 'active' : '')}>{unit}</View>;
}) 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("../../img/checkbox.svg") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
require("../../img/checkbox_active.svg") 
INFO [taro-cli-convertor] convertToOptional - 解析CallExpression 
item.room.map((item, index) => {
  return <View className={"house " + (item.selected === 0 ? 'unselect' : '')}><Image className="image" src={item.selected === 0 ? '../../img/checkbox.svg' : '../../img/checkbox_white.svg'}></Image><View className="text">{item.room_number}</View><View className="status">{item.selected === 0 ? "未选" : "已选"}</View></View>;
}) 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  getTarget
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  cacheOptions
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  default: withWeapp
} = require("@tarojs/with-weapp"); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
// pages/unit_list/unit_list.ts
const app = Taro.getApp(); 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  place,
  building
} = res.data; 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  place,
  building
} = res.data; 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  active
} = getTarget(e.currentTarget, Taro).dataset; 
INFO [taro-cli-convertor] parseAst - 解析VariableDeclaration 
const {
  units,
  active,
  place,
  building,
  data
} = this.data; 
INFO [taro-cli-convertor] traverseStyle - 开始转换样式 
D:\work\Floor\mini-program\miniprogram\pages\unit_list\unit_list.wxss 
INFO [taroize] parse - 入参 
option: {"json":"{\"navigationBarTitleText\":\"北四村棚改项目\"}","script":"// pages/room_distribution/room_distribution.ts\r\nPage({\r\n\r\n  /**\r\n   * 页面的初始数据\r\n   */\r\n  data: {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面加载\r\n   */\r\n  onLoad() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面初次渲染完成\r\n   */\r\n  onReady() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面显示\r\n   */\r\n  onShow() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面隐藏\r\n   */\r\n  onHide() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面卸载\r\n   */\r\n  onUnload() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面相关事件处理函数--监听用户下拉动作\r\n   */\r\n  onPullDownRefresh() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面上拉触底事件的处理函数\r\n   */\r\n  onReachBottom() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 用户点击右上角分享\r\n   */\r\n  onShareAppMessage() {\r\n\r\n  }\r\n})","scriptPath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_distribution\\room_distribution.js","wxml":"<!-- pages/room_distribution/room_distribution.wxml -->\r\n<view class=\"container\">\r\n    <view class=\"title\">信息公示</view>\r\n    <view class=\"item\">\r\n        <view class=\"label\">居室分布示意图</view>\r\n        <view class=\"date\">2023/09/08 23:16:59</view>\r\n    </view>\r\n    <image class=\"image\" src=\"../../img/room_distribution/1.png\"  mode=\"widthFix\" />\r\n</view>","path":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_distribution","rootPath":"D:\\work\\Floor\\mini-program\\miniprogram","pluginInfo":{"pluginRoot":"","pluginName":"","pages":{},"pagesMap":{},"publicComponents":{},"entryFilePath":""},"logFilePath":"D:\\work\\Floor\\mini-program\\taroConvert\\.convert\\convert.log","templatePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_distribution\\room_distribution.wxml","framework":"React"} 
INFO [taroize] parseWXML - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_distribution 
parseImport: undefined 
INFO [taroize] parseNode - 入参 
tagName: undefined 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"container"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"image"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"../../img/room_distribution/1.png"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"mode","value":"widthFix"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] createPreWxmlVistor - 入参 
templates: [object Map] 
INFO [taroize] templateBfs - 进入函数 
INFO [taroize] createWxmlVistor - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_distribution 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block><View className="container"><View className="title">信息公示</View><View className="item"><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_distribution/1.png" mode="widthFix"></Image></View></Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_distribution/1.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View><Image className="image" src="../../img/room_distribution/1.png" mode="widthFix"></Image></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_distribution/1.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="label">居室分布示意图</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">居室分布示意图</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Image className="image" src="../../img/room_distribution/1.png" mode="widthFix"></Image> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_distribution/1.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="image" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="../../img/room_distribution/1.png" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
mode="widthFix" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
mode 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Image 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] parseScript - 入参 
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_distribution\room_distribution.js 
INFO [taroize] parseCode - 入参
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_distribution\room_distribution.js 
INFO [taroize] parseScript - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parsePage - 入参 
pagePath: Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parseScript - 解析Identifier 
Page 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
onLoad 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReady 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShow 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onHide 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onUnload 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onPullDownRefresh 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReachBottom 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShareAppMessage 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parse - 入参 
option: {"json":"{\"navigationBarTitleText\":\"北四村棚改项目\"}","script":"// pages/room_distribution/room_distribution.ts\r\nPage({\r\n\r\n  /**\r\n   * 页面的初始数据\r\n   */\r\n  data: {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面加载\r\n   */\r\n  onLoad() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面初次渲染完成\r\n   */\r\n  onReady() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面显示\r\n   */\r\n  onShow() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面隐藏\r\n   */\r\n  onHide() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 生命周期函数--监听页面卸载\r\n   */\r\n  onUnload() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面相关事件处理函数--监听用户下拉动作\r\n   */\r\n  onPullDownRefresh() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 页面上拉触底事件的处理函数\r\n   */\r\n  onReachBottom() {\r\n\r\n  },\r\n\r\n  /**\r\n   * 用户点击右上角分享\r\n   */\r\n  onShareAppMessage() {\r\n\r\n  }\r\n})","scriptPath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_video\\room_video.js","wxml":"<!-- pages/room_video/room_video.wxml -->\r\n<view class=\"container\">\r\n    <view class=\"title\">信息公示</view>\r\n    <view class=\"item\">\r\n        <view class=\"label\">选房流程动画</view>\r\n        <view class=\"date\">2023/09/08 23:16:59</view>\r\n    </view>\r\n    <video src=\"https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4\" poster=\"http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg\"></video>\r\n</view>","path":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_video","rootPath":"D:\\work\\Floor\\mini-program\\miniprogram","pluginInfo":{"pluginRoot":"","pluginName":"","pages":{},"pagesMap":{},"publicComponents":{},"entryFilePath":""},"logFilePath":"D:\\work\\Floor\\mini-program\\taroConvert\\.convert\\convert.log","templatePath":"D:\\work\\Floor\\mini-program\\miniprogram\\pages\\room_video\\room_video.wxml","framework":"React"} 
INFO [taroize] parseWXML - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_video 
parseImport: undefined 
INFO [taroize] parseNode - 入参 
tagName: undefined 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: block 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"container"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"title"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"item"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"label"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"class","value":"date"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseText - 进入函数 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseNode - 入参 
tagName: view 
INFO [taroize] parseElement - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"src","value":"https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] parseAttribute - 入参 
attr: {"key":"poster","value":"http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg"} 
INFO [taroize] parseContent - 进入函数 
INFO [taroize] createPreWxmlVistor - 入参 
templates: [object Map] 
INFO [taroize] templateBfs - 进入函数 
INFO [taroize] createWxmlVistor - 入参 
dirPath: D:\work\Floor\mini-program\miniprogram\pages\room_video 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Block><View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><Video src="https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" poster="http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg"></Video></View></Block> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Video 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
poster="http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
poster 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Video 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="container"><View className="title">信息公示</View><View className="item"><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View><Video src="https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" poster="http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg"></Video></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Video 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
poster="http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
poster 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Video 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="container" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="title">信息公示</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="title" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="item"><View className="label">选房流程动画</View><View className="date">2023/09/08 23:16:59</View></View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="item" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="label">选房流程动画</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="label" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<View className="date">2023/09/08 23:16:59</View> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
className="date" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
className 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXElement 
<Video src="https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" poster="http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg"></Video> 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Video 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
poster="http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
poster 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Video 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Video 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
src="https://baikevideo.cdn.bcebos.com/media/mda-Ofj5DOML8EqV0Umy/da4f175769bcf693d0d0e205e1546015.mp4" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
src 
INFO [taroize] createWxmlVistor - 解析JSXAttribute 
poster="http://mmbiz.qpic.cn/mmbiz_jpg/EhZ0Apwc3PEeGtkWJyWbblIIRII9eLXQVibOHX3un9B2icSeoEp0BHxxlAib4ko6budbzYlfBuGp5ibA1TCXqSRwPg/0?wx_fmt=jpeg" 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
poster 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Video 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
View 
INFO [taroize] createWxmlVistor - 解析JSXIdentifier 
Block 
INFO [taroize] parseScript - 入参 
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_video\room_video.js 
INFO [taroize] parseCode - 入参
scriptPath: D:\work\Floor\mini-program\miniprogram\pages\room_video\room_video.js 
INFO [taroize] parseScript - 解析CallExpression 
Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parsePage - 入参 
pagePath: Page({
  /**
   * 页面的初始数据
   */
  data: {},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad() {},
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady() {},
  /**
   * 生命周期函数--监听页面显示
   */
  onShow() {},
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide() {},
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload() {},
  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh() {},
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {},
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage() {}
}) 
INFO [taroize] parseScript - 解析Identifier 
Page 
INFO [taroize] parseScript - 解析Identifier 
data 
INFO [taroize] parseScript - 解析Identifier 
onLoad 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReady 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShow 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onHide 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onUnload 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onPullDownRefresh 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onReachBottom 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
INFO [taroize] parseScript - 解析Identifier 
onShareAppMessage 
INFO [taroize] parseScript - 解析BlockStatement 
{} 
